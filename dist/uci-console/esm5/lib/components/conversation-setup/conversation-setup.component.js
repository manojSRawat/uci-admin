import { __decorate } from "tslib";
import { Component, EventEmitter, Input, Output } from '@angular/core';
import { UciService } from '../../services/uci.service';
import { GlobalService } from '../../services/global.service';
import { MatDialog } from '@angular/material/dialog';
import { FormBuilder, FormGroup } from '@angular/forms';
import * as moment from 'moment';
import { debounceTime } from 'rxjs/operators';
var ConversationSetupComponent = /** @class */ (function () {
    function ConversationSetupComponent(fb, uciService, globalService, dialog) {
        this.fb = fb;
        this.uciService = uciService;
        this.globalService = globalService;
        this.dialog = dialog;
        this.starringMessageChange = new EventEmitter();
        this.userSegmentDelete = new EventEmitter();
    }
    ConversationSetupComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.matDateBreakpoint = (window.innerWidth <= 1000) ? 1 : 2;
        this.resourceService = this.globalService.getResourceService();
        if (this.conversationForm) {
            // start date and end date value change
            this.conversationForm.get('startDate').valueChanges.subscribe(function (val) {
                if ((_this.conversationForm.value.endDate && moment(_this.conversationForm.value.endDate).isBefore(moment(val))) || !val) {
                    _this.conversationForm.get('endDate').patchValue(null);
                }
                var tempDate = moment(val).format('YYYY-MM-DD');
                _this.endMinDate = new Date(tempDate);
            });
            this.conversationForm.get('startingMessage').valueChanges
                .pipe(debounceTime(1000))
                .subscribe(function (value) {
                _this.onStarringMessageChange();
            });
        }
    };
    ConversationSetupComponent.prototype.onStarringMessageChange = function () {
        this.starringMessageChange.emit({});
    };
    ConversationSetupComponent.prototype.onUserSegmentDelete = function (index) {
        this.userSegmentDelete.emit(index);
    };
    ConversationSetupComponent.ctorParameters = function () { return [
        { type: FormBuilder },
        { type: UciService },
        { type: GlobalService },
        { type: MatDialog }
    ]; };
    __decorate([
        Input()
    ], ConversationSetupComponent.prototype, "conversationForm", void 0);
    __decorate([
        Input()
    ], ConversationSetupComponent.prototype, "isStartingMessageExist", void 0);
    __decorate([
        Input()
    ], ConversationSetupComponent.prototype, "startMinDate", void 0);
    __decorate([
        Input()
    ], ConversationSetupComponent.prototype, "userSegments", void 0);
    __decorate([
        Output()
    ], ConversationSetupComponent.prototype, "starringMessageChange", void 0);
    __decorate([
        Output()
    ], ConversationSetupComponent.prototype, "userSegmentDelete", void 0);
    ConversationSetupComponent = __decorate([
        Component({
            selector: 'lib-conversation-setup',
            template: "<div class=\"uci-container\">\n    <mat-grid-list cols=\"1\" rowHeight=\"4rem\">\n        <mat-grid-tile colspan=\"1\" class=\"font-1-2 font-weight-bold\">\n            <div class=\"w-100 text-left\">{{resourceService.frmelmnts?.lbl?.addConversation}}</div>\n        </mat-grid-tile>\n    </mat-grid-list>\n\n    <form [formGroup]=\"conversationForm\">\n        <mat-form-field class=\"w-100\" appearance=\"outline\">\n            <mat-label>{{resourceService.frmelmnts?.lbl?.conversationName}}\n                <sup><i class=\"asterisk icon asterisk-color\"></i></sup>\n            </mat-label>\n            <input matInput type=\"text\" name=\"name\"\n                   placeholder=\"{{resourceService.frmelmnts?.lbl?.enterName}}\"\n                   formControlName=\"name\">\n        </mat-form-field>\n        <mat-form-field class=\"w-100\" appearance=\"outline\">\n            <mat-label>{{resourceService.frmelmnts?.lbl?.conversationDescription}}</mat-label>\n            <textarea matInput rows=\"5\" name=\"description\"\n                      placeholder=\"{{resourceService.frmelmnts?.lbl?.enterDescription}}\"\n                      formControlName=\"description\">\n            </textarea>\n        </mat-form-field>\n\n        <mat-form-field class=\"w-100\" appearance=\"outline\">\n            <mat-label>\n                {{resourceService.frmelmnts?.lbl?.conversationPurpose}}\n                <sup><i class=\"asterisk icon asterisk-color\"></i></sup>\n            </mat-label>\n            <input matInput type=\"text\" name=\"name\"\n                   placeholder=\"{{resourceService.frmelmnts?.lbl?.enterPurpose}}\"\n                   formControlName=\"purpose\">\n        </mat-form-field>\n\n        <mat-form-field class=\"w-100\" appearance=\"outline\">\n            <mat-label>{{resourceService.frmelmnts?.lbl?.startMessage}} <sup><i\n                    class=\"asterisk icon asterisk-color\"></i></sup></mat-label>\n            <input matInput type=\"text\" name=\"startingMessage\"\n                   placeholder=\"{{resourceService.frmelmnts?.lbl?.enterMessage}}\"\n                   formControlName=\"startingMessage\">\n<!--          {{isStartingMessageExist}}-->\n<!--          {{conversationForm.invalid}}-->\n            <mat-error>\n                {{resourceService.frmelmnts?.lbl?.startMessageError}}\n            </mat-error>\n        </mat-form-field>\n\n        <mat-form-field class=\"w-100\" appearance=\"outline\">\n            <mat-label>{{resourceService.frmelmnts?.lbl?.segmentId}} <sup><i\n                    class=\"asterisk icon asterisk-color\"></i></sup></mat-label>\n            <input matInput type=\"text\" name=\"segmentId\"\n                  placeholder=\"{{resourceService.frmelmnts?.lbl?.enterSegmentId}}\"\n                  formControlName=\"segmentId\">\n        </mat-form-field>\n\n        <!--<mat-form-field class=\"w-100\" appearance=\"outline\">\n            <mat-label>{{resourceService.frmelmnts?.lbl?.notificationTitle}} <sup><i\n                    class=\"asterisk icon asterisk-color\"></i></sup></mat-label>\n            <input matInput type=\"text\" name=\"notificationTitle\"\n                  placeholder=\"{{resourceService.frmelmnts?.lbl?.enterTitle}}\"\n                  formControlName=\"notificationTitle\">\n        </mat-form-field>\n\n        <mat-form-field class=\"w-100\" appearance=\"outline\">\n            <mat-label>{{resourceService.frmelmnts?.lbl?.notificationDescription}} <sup><i\n                    class=\"asterisk icon asterisk-color\"></i></sup></mat-label>\n            <textarea matInput rows=\"5\" name=\"notificationDescription\"\n                    placeholder=\"{{resourceService.frmelmnts?.lbl?.enterDescription}}\"\n                    formControlName=\"notificationDescription\">\n            </textarea>\n        </mat-form-field>-->\n\n        <mat-grid-list [cols]=\"matDateBreakpoint\" rowHeight=\"6rem\">\n            <mat-grid-tile>\n                <div class=\"w-100 text-left\">\n                    <mat-form-field class=\"w-100\" appearance=\"outline\">\n                        <mat-label>\n                            {{resourceService.frmelmnts?.lbl?.startDate}}\n                            <sup><i class=\"asterisk icon asterisk-color\"></i></sup>\n                        </mat-label>\n                        <input matInput [matDatepicker]=\"picker\" [min]=\"startMinDate\" formControlName=\"startDate\">\n                        <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                        <mat-datepicker #picker></mat-datepicker>\n                    </mat-form-field>\n                </div>\n            </mat-grid-tile>\n            <mat-grid-tile>\n                <div class=\"w-100 text-left\">\n                    <mat-form-field class=\"w-100\" appearance=\"outline\">\n                        <mat-label>\n                            {{resourceService.frmelmnts?.lbl?.endDate}}\n                        </mat-label>\n                        <input matInput [matDatepicker]=\"endPicker\" [min]=\"endMinDate\" formControlName=\"endDate\">\n                        <mat-datepicker-toggle matSuffix [for]=\"endPicker\"></mat-datepicker-toggle>\n                        <mat-datepicker #endPicker></mat-datepicker>\n                    </mat-form-field>\n                </div>\n            </mat-grid-tile>\n        </mat-grid-list>\n    </form>\n</div>\n<!--Will enable this in future-->\n<!--<div class=\"ui divider\"></div>\n<div class=\"ui grid\">\n    <div class=\"six wide column\">\n        <h6>User segments</h6>\n        <p class=\"pt-10\">{{userSegments.length}} segments added</p>\n    </div>\n    <div class=\"six wide column  right aligned\">\n        <div class=\"pt-0\">\n            <button mat-mini-fab class=\"action-button mr-10\"\n                    (click)=\"onUserSegmentAddClick()\">\n                Create new\n            </button>\n            <button mat-mini-fab class=\"action-button\" (click)=\"userSegment()\">\n                Choose from existing\n            </button>\n        </div>\n    </div>\n</div>-->\n<div class=\"\">\n    <ng-container *ngIf=\"userSegments && userSegments.length\">\n        <div class=\"ui three column grid\">\n            <div class=\"column\" *ngFor=\"let userSegment of userSegments; let i = index\">\n                <div class=\"ui fluid card\">\n                    <div class=\"content\">\n                        <i class=\"right floated icon trash delete-icon\"\n                           (click)=\"onUserSegmentDelete(i)\"></i>\n                        {{userSegment.name}}\n                        <div class=\"meta\">{{resourceService.frmelmnts?.lbl?.userCount}} {{userSegment.count}}</div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </ng-container>\n\n</div>\n",
            styles: ["@import url(https://fonts.googleapis.com/css?family=Material+Icons);.uci-container ::ng-deep .mat-form-field-appearance-outline .mat-form-field-outline{background-color:#fff;border-radius:5px}.mat-table{width:100%}.mat-header-cell{font-weight:700;color:#000}.uci-action-button{background-color:#005a9e;color:#fff}.uci-copy-button{background-color:#e0e1e2;color:#000}.hide{display:none}.asterisk-color{color:red}.uci-mat-pagination{text-align:right}.small-btn{padding:6px 14px;font-size:12px;line-height:1;min-width:auto}.w-100{width:100%}.justify-between{justify-content:space-between}.align-middle{align-items:center}.overflow-visible{overflow:visible!important}.background-transparent{background:0 0!important}.wrap-text{word-wrap:break-word}.col-3{flex-grow:3}.col-1{flex-grow:1}.d-flex{display:flex}.flex-row{flex-flow:row!important}.flex-column{flex-flow:column!important}.justify-content-center{justify-content:center!important}.justify-content-start{justify-content:start!important}.justify-content-end{justify-content:end!important}.justify-content-around{justify-content:space-around!important}.justify-content-between{justify-content:space-between!important}.align-items-center{align-items:center!important}.align-items-start{align-items:start!important}.align-items-baseline{align-items:baseline!important}.align-items-end{align-items:end!important}.text-center{text-align:center!important}.text-left{text-align:left!important}.text-right{text-align:right!important}.text-right .margin-auto{margin:auto!important}.mat-column-action{width:5px}"]
        })
    ], ConversationSetupComponent);
    return ConversationSetupComponent;
}());
export { ConversationSetupComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29udmVyc2F0aW9uLXNldHVwLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BzYW1hZ3JhLXgvdWNpLWNvbnNvbGUvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy9jb252ZXJzYXRpb24tc2V0dXAvY29udmVyc2F0aW9uLXNldHVwLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFDLFNBQVMsRUFBRSxZQUFZLEVBQUUsS0FBSyxFQUFVLE1BQU0sRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUM3RSxPQUFPLEVBQUMsVUFBVSxFQUFDLE1BQU0sNEJBQTRCLENBQUM7QUFDdEQsT0FBTyxFQUFDLGFBQWEsRUFBQyxNQUFNLCtCQUErQixDQUFDO0FBQzVELE9BQU8sRUFBQyxTQUFTLEVBQUMsTUFBTSwwQkFBMEIsQ0FBQztBQUNuRCxPQUFPLEVBQUMsV0FBVyxFQUFFLFNBQVMsRUFBQyxNQUFNLGdCQUFnQixDQUFDO0FBQ3RELE9BQU8sS0FBSyxNQUFNLE1BQU0sUUFBUSxDQUFDO0FBQ2pDLE9BQU8sRUFBQyxZQUFZLEVBQUMsTUFBTSxnQkFBZ0IsQ0FBQztBQU81QztJQVdJLG9DQUNZLEVBQWUsRUFDZixVQUFzQixFQUN0QixhQUE0QixFQUM3QixNQUFpQjtRQUhoQixPQUFFLEdBQUYsRUFBRSxDQUFhO1FBQ2YsZUFBVSxHQUFWLFVBQVUsQ0FBWTtRQUN0QixrQkFBYSxHQUFiLGFBQWEsQ0FBZTtRQUM3QixXQUFNLEdBQU4sTUFBTSxDQUFXO1FBVmxCLDBCQUFxQixHQUFHLElBQUksWUFBWSxFQUFPLENBQUM7UUFDaEQsc0JBQWlCLEdBQUcsSUFBSSxZQUFZLEVBQU8sQ0FBQztJQVd0RCxDQUFDO0lBRUQsNkNBQVEsR0FBUjtRQUFBLGlCQXFCQztRQXBCRyxJQUFJLENBQUMsaUJBQWlCLEdBQUcsQ0FBQyxNQUFNLENBQUMsVUFBVSxJQUFJLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUM3RCxJQUFJLENBQUMsZUFBZSxHQUFHLElBQUksQ0FBQyxhQUFhLENBQUMsa0JBQWtCLEVBQUUsQ0FBQztRQUMvRCxJQUFJLElBQUksQ0FBQyxnQkFBZ0IsRUFBRTtZQUN2Qix1Q0FBdUM7WUFDdkMsSUFBSSxDQUFDLGdCQUFnQixDQUFDLEdBQUcsQ0FBQyxXQUFXLENBQUMsQ0FBQyxZQUFZLENBQUMsU0FBUyxDQUFDLFVBQUEsR0FBRztnQkFDN0QsSUFBSSxDQUFDLEtBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxLQUFLLENBQUMsT0FBTyxJQUFJLE1BQU0sQ0FBQyxLQUFJLENBQUMsZ0JBQWdCLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQyxDQUFDLFFBQVEsQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsR0FBRyxFQUFFO29CQUNwSCxLQUFJLENBQUMsZ0JBQWdCLENBQUMsR0FBRyxDQUFDLFNBQVMsQ0FBQyxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsQ0FBQztpQkFDekQ7Z0JBQ0QsSUFBTSxRQUFRLEdBQUcsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxZQUFZLENBQUMsQ0FBQztnQkFDbEQsS0FBSSxDQUFDLFVBQVUsR0FBRyxJQUFJLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztZQUN6QyxDQUFDLENBQUMsQ0FBQztZQUVILElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxHQUFHLENBQUMsaUJBQWlCLENBQUMsQ0FBQyxZQUFZO2lCQUNwRCxJQUFJLENBQUMsWUFBWSxDQUFDLElBQUksQ0FBQyxDQUFDO2lCQUN4QixTQUFTLENBQ04sVUFBQSxLQUFLO2dCQUNELEtBQUksQ0FBQyx1QkFBdUIsRUFBRSxDQUFDO1lBQ25DLENBQUMsQ0FDSixDQUFDO1NBQ1Q7SUFDTCxDQUFDO0lBRUQsNERBQXVCLEdBQXZCO1FBQ0ksSUFBSSxDQUFDLHFCQUFxQixDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsQ0FBQztJQUN4QyxDQUFDO0lBRUQsd0RBQW1CLEdBQW5CLFVBQW9CLEtBQUs7UUFDckIsSUFBSSxDQUFDLGlCQUFpQixDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUN2QyxDQUFDOztnQkFwQ2UsV0FBVztnQkFDSCxVQUFVO2dCQUNQLGFBQWE7Z0JBQ3JCLFNBQVM7O0lBZG5CO1FBQVIsS0FBSyxFQUFFO3dFQUE2QjtJQUM1QjtRQUFSLEtBQUssRUFBRTs4RUFBd0I7SUFDdkI7UUFBUixLQUFLLEVBQUU7b0VBQWM7SUFDYjtRQUFSLEtBQUssRUFBRTtvRUFBYztJQUNaO1FBQVQsTUFBTSxFQUFFOzZFQUFpRDtJQUNoRDtRQUFULE1BQU0sRUFBRTt5RUFBNkM7SUFON0MsMEJBQTBCO1FBTHRDLFNBQVMsQ0FBQztZQUNQLFFBQVEsRUFBRSx3QkFBd0I7WUFDbEMsMHVOQUFrRDs7U0FFckQsQ0FBQztPQUNXLDBCQUEwQixDQWlEdEM7SUFBRCxpQ0FBQztDQUFBLEFBakRELElBaURDO1NBakRZLDBCQUEwQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q29tcG9uZW50LCBFdmVudEVtaXR0ZXIsIElucHV0LCBPbkluaXQsIE91dHB1dH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge1VjaVNlcnZpY2V9IGZyb20gJy4uLy4uL3NlcnZpY2VzL3VjaS5zZXJ2aWNlJztcbmltcG9ydCB7R2xvYmFsU2VydmljZX0gZnJvbSAnLi4vLi4vc2VydmljZXMvZ2xvYmFsLnNlcnZpY2UnO1xuaW1wb3J0IHtNYXREaWFsb2d9IGZyb20gJ0Bhbmd1bGFyL21hdGVyaWFsL2RpYWxvZyc7XG5pbXBvcnQge0Zvcm1CdWlsZGVyLCBGb3JtR3JvdXB9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcbmltcG9ydCAqIGFzIG1vbWVudCBmcm9tICdtb21lbnQnO1xuaW1wb3J0IHtkZWJvdW5jZVRpbWV9IGZyb20gJ3J4anMvb3BlcmF0b3JzJztcblxuQENvbXBvbmVudCh7XG4gICAgc2VsZWN0b3I6ICdsaWItY29udmVyc2F0aW9uLXNldHVwJyxcbiAgICB0ZW1wbGF0ZVVybDogJy4vY29udmVyc2F0aW9uLXNldHVwLmNvbXBvbmVudC5odG1sJyxcbiAgICBzdHlsZVVybHM6IFsnLi9jb252ZXJzYXRpb24tc2V0dXAuY29tcG9uZW50LnNjc3MnXVxufSlcbmV4cG9ydCBjbGFzcyBDb252ZXJzYXRpb25TZXR1cENvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XG4gICAgQElucHV0KCkgY29udmVyc2F0aW9uRm9ybTogRm9ybUdyb3VwO1xuICAgIEBJbnB1dCgpIGlzU3RhcnRpbmdNZXNzYWdlRXhpc3Q7XG4gICAgQElucHV0KCkgc3RhcnRNaW5EYXRlO1xuICAgIEBJbnB1dCgpIHVzZXJTZWdtZW50cztcbiAgICBAT3V0cHV0KCkgc3RhcnJpbmdNZXNzYWdlQ2hhbmdlID0gbmV3IEV2ZW50RW1pdHRlcjxhbnk+KCk7XG4gICAgQE91dHB1dCgpIHVzZXJTZWdtZW50RGVsZXRlID0gbmV3IEV2ZW50RW1pdHRlcjxhbnk+KCk7XG4gICAgbWF0RGF0ZUJyZWFrcG9pbnQ7XG4gICAgZW5kTWluRGF0ZTtcbiAgICByZXNvdXJjZVNlcnZpY2U7XG5cbiAgICBjb25zdHJ1Y3RvcihcbiAgICAgICAgcHJpdmF0ZSBmYjogRm9ybUJ1aWxkZXIsXG4gICAgICAgIHByaXZhdGUgdWNpU2VydmljZTogVWNpU2VydmljZSxcbiAgICAgICAgcHJpdmF0ZSBnbG9iYWxTZXJ2aWNlOiBHbG9iYWxTZXJ2aWNlLFxuICAgICAgICBwdWJsaWMgZGlhbG9nOiBNYXREaWFsb2csXG4gICAgKSB7XG4gICAgfVxuXG4gICAgbmdPbkluaXQoKSB7XG4gICAgICAgIHRoaXMubWF0RGF0ZUJyZWFrcG9pbnQgPSAod2luZG93LmlubmVyV2lkdGggPD0gMTAwMCkgPyAxIDogMjtcbiAgICAgICAgdGhpcy5yZXNvdXJjZVNlcnZpY2UgPSB0aGlzLmdsb2JhbFNlcnZpY2UuZ2V0UmVzb3VyY2VTZXJ2aWNlKCk7XG4gICAgICAgIGlmICh0aGlzLmNvbnZlcnNhdGlvbkZvcm0pIHtcbiAgICAgICAgICAgIC8vIHN0YXJ0IGRhdGUgYW5kIGVuZCBkYXRlIHZhbHVlIGNoYW5nZVxuICAgICAgICAgICAgdGhpcy5jb252ZXJzYXRpb25Gb3JtLmdldCgnc3RhcnREYXRlJykudmFsdWVDaGFuZ2VzLnN1YnNjcmliZSh2YWwgPT4ge1xuICAgICAgICAgICAgICAgIGlmICgodGhpcy5jb252ZXJzYXRpb25Gb3JtLnZhbHVlLmVuZERhdGUgJiYgbW9tZW50KHRoaXMuY29udmVyc2F0aW9uRm9ybS52YWx1ZS5lbmREYXRlKS5pc0JlZm9yZShtb21lbnQodmFsKSkpIHx8ICF2YWwpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5jb252ZXJzYXRpb25Gb3JtLmdldCgnZW5kRGF0ZScpLnBhdGNoVmFsdWUobnVsbCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGNvbnN0IHRlbXBEYXRlID0gbW9tZW50KHZhbCkuZm9ybWF0KCdZWVlZLU1NLUREJyk7XG4gICAgICAgICAgICAgICAgdGhpcy5lbmRNaW5EYXRlID0gbmV3IERhdGUodGVtcERhdGUpO1xuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgIHRoaXMuY29udmVyc2F0aW9uRm9ybS5nZXQoJ3N0YXJ0aW5nTWVzc2FnZScpLnZhbHVlQ2hhbmdlc1xuICAgICAgICAgICAgICAgIC5waXBlKGRlYm91bmNlVGltZSgxMDAwKSlcbiAgICAgICAgICAgICAgICAuc3Vic2NyaWJlKFxuICAgICAgICAgICAgICAgICAgICB2YWx1ZSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLm9uU3RhcnJpbmdNZXNzYWdlQ2hhbmdlKCk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICApO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgb25TdGFycmluZ01lc3NhZ2VDaGFuZ2UoKSB7XG4gICAgICAgIHRoaXMuc3RhcnJpbmdNZXNzYWdlQ2hhbmdlLmVtaXQoe30pO1xuICAgIH1cblxuICAgIG9uVXNlclNlZ21lbnREZWxldGUoaW5kZXgpIHtcbiAgICAgICAgdGhpcy51c2VyU2VnbWVudERlbGV0ZS5lbWl0KGluZGV4KTtcbiAgICB9XG59XG4iXX0=