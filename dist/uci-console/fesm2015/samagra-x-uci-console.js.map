{"version":3,"file":"samagra-x-uci-console.js","sources":["ng://@samagra-x/uci-console/lib/pipes/pipes.module.ts","ng://@samagra-x/uci-console/lib/services/global.service.ts","ng://@samagra-x/uci-console/lib/services/base.service.ts","ng://@samagra-x/uci-console/lib/services/uci.service.ts","ng://@samagra-x/uci-console/lib/services/config.service.ts","ng://@samagra-x/uci-console/lib/models/uci.model.ts","ng://@samagra-x/uci-console/lib/uci-events.service.ts","ng://@samagra-x/uci-console/lib/telemetry-utils.service.ts","ng://@samagra-x/uci-console/lib/components/side-panel/side-panel.component.ts","ng://@samagra-x/uci-console/lib/utils/helper.ts","ng://@samagra-x/uci-console/lib/components/conversation-list/conversation-list.component.ts","ng://@samagra-x/uci-console/lib/services/toaster.service.ts","ng://@samagra-x/uci-console/lib/components/terms-conditions/terms-conditions.component.ts","ng://@samagra-x/uci-console/lib/components/terms-condition-confirm/terms-condition-confirm.component.ts","ng://@samagra-x/uci-console/lib/components/conversation-add/conversation-add.component.ts","ng://@samagra-x/uci-console/lib/components/user-segment-list/user-segment-list.component.ts","ng://@samagra-x/uci-console/lib/services/uci-graph-ql.service.ts","ng://@samagra-x/uci-console/lib/components/user-segment-add/user-segment-add.component.ts","ng://@samagra-x/uci-console/lib/components/conversation-success/conversation-success.component.ts","ng://@samagra-x/uci-console/lib/components/add-logic/add-logic.component.ts","ng://@samagra-x/uci-console/lib/components/logic-list/logic-list.component.ts","ng://@samagra-x/uci-console/lib/components/conversation-setup/conversation-setup.component.ts","ng://@samagra-x/uci-console/lib/services/paginator-intl.service.ts","ng://@samagra-x/uci-console/lib/components/exhaust-report/exhaust-report.component.ts","ng://@samagra-x/uci-console/lib/components/components.module.ts","ng://@samagra-x/uci-console/lib/components/lib-entry/lib-entry.component.ts","ng://@samagra-x/uci-console/lib/uci-routing/uci-routing.module.ts","ng://@samagra-x/uci-console/lib/uci.module.ts","ng://@samagra-x/uci-console/public-api.ts","ng://@samagra-x/uci-console/samagra-x-uci-console.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule\n  ],\n  exports: []\n})\nexport class PipesModule { }\n","import {Injectable} from '@angular/core';\nimport {BehaviorSubject} from 'rxjs';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class GlobalService {\n    private user: BehaviorSubject<any> = new BehaviorSubject(undefined);\n    public readonly user$ = this.user.asObservable();\n    private baseUrl: BehaviorSubject<any> = new BehaviorSubject(undefined);\n    private nlBaseUrl: BehaviorSubject<any> = new BehaviorSubject(undefined);\n    private blobUrl: BehaviorSubject<any> = new BehaviorSubject(undefined);\n    private botPhoneNumber: BehaviorSubject<any> = new BehaviorSubject('');\n    private resourceService: BehaviorSubject<any> = new BehaviorSubject({});\n    private broadcastAdapterId: BehaviorSubject<any> = new BehaviorSubject('');\n    private adapterId: BehaviorSubject<any> = new BehaviorSubject('');\n    public readonly baseUrl$ = this.baseUrl.asObservable();\n    public readonly nlBaseUrl$ = this.nlBaseUrl.asObservable();\n    public readonly resourceService$ = this.resourceService.asObservable();\n\n    constructor() {\n    }\n\n    setUser(user) {\n        this.user.next(user);\n    }\n\n    getUser() {\n        return this.user.value;\n    }\n\n    setBaseUrl(baseUrl) {\n        this.baseUrl.next(baseUrl);\n    }\n\n    getBaseUrl() {\n        return this.baseUrl.value;\n    }\n\n    setNlBaseUrl(baseUrl) {\n        this.nlBaseUrl.next(baseUrl);\n    }\n\n    getNlBaseUrl() {\n        return this.nlBaseUrl.value;\n    }\n\n    setBlobUrl(baseUrl) {\n        this.blobUrl.next(baseUrl);\n    }\n\n    getBlobUrl() {\n        return this.blobUrl.value;\n    }\n\n    setBotPhoneNumber(phoneNumber) {\n        this.botPhoneNumber.next(phoneNumber);\n    }\n\n    getBotPhoneNumber() {\n        return this.botPhoneNumber.value;\n    }\n\n    setResourceService(resourceService) {\n        this.resourceService.next(resourceService);\n    }\n\n    getResourceService() {\n        return this.resourceService.value;\n    }\n\n    setBroadcastAdapterId(broadcastAdapterId) {\n        this.broadcastAdapterId.next(broadcastAdapterId);\n    }\n\n    getBroadcastAdapterId() {\n        return this.broadcastAdapterId.value;\n    }\n\n    setAdapterId(broadcastAdapterId) {\n        this.adapterId.next(broadcastAdapterId);\n    }\n\n    getAdapterId() {\n        return this.adapterId.value;\n    }\n}\n","import {HttpClient, HttpErrorResponse} from '@angular/common/http';\nimport {catchError, map} from 'rxjs/operators';\n\nimport {GlobalService} from './global.service';\nimport {Injectable} from '@angular/core';\nimport {throwError} from 'rxjs';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class BaseService {\n    constructor(public http: HttpClient, public globalService: GlobalService) {\n    }\n\n    private getDefaultHeaders() {\n        const headers: any = {};\n        const user = this.globalService.getUser();\n        if (user && user.id) {\n            headers.ownerID = user.id;\n        }\n        if (user && user.rootOrgId) {\n            headers.ownerOrgID = user.rootOrgId;\n        }\n        if (user.token) {\n          headers['admin-token'] = user.token;\n        }\n\n        return headers;\n    }\n\n    public getRequest(url, params: any = {}, headers: any = {}) {\n        headers = {\n            ...headers,\n            ...this.getDefaultHeaders()\n        };\n\n        return this.http.get(url, {params, headers}).pipe(\n            map((res: any) => {\n                return res.result;\n            }),\n            catchError(err => {\n                return this.handleError(err);\n            })\n        );\n    }\n\n    public postRequest(url, data = {}, headers: any = {}) {\n        headers = {\n            ...headers,\n            ...this.getDefaultHeaders()\n        };\n\n        return this.http.post(url, data, {headers}).pipe(\n            map((res: any) => {\n                return res.result;\n            }),\n            catchError(err => {\n                return this.handleError(err);\n            })\n        );\n    }\n\n    public postSegmentRequest(url, data = {}, headers: any = {}) {\n        headers = {\n            ...headers,\n            ...this.getDefaultHeaders()\n        };\n\n        return this.http.post(url, data, {headers}).pipe(\n            map((res: any) => {\n                return res.result ? res.result : res;\n            }),\n            catchError(err => {\n                return this.handleError(err);\n            })\n        );\n    }\n\n    public patchRequest(url, data = {}, headers: any = {}) {\n        headers = {\n            ...headers,\n            ...this.getDefaultHeaders()\n        };\n\n        return this.http.patch(url, data, {headers}).pipe(\n            map((res: any) => {\n                return res.result;\n            }),\n            catchError(err => {\n                return this.handleError(err);\n            })\n        );\n    }\n\n    public deleteRequest(url, headers: any = {}) {\n        headers = {\n            ...headers,\n            ...this.getDefaultHeaders()\n        };\n\n        return this.http.delete(url, {headers}).pipe(\n            map((res: any) => {\n                return res.result;\n            }),\n            catchError(err => {\n                return this.handleError(err);\n            })\n        );\n    }\n\n\n    public handleError(error: HttpErrorResponse) {\n        if (error instanceof ErrorEvent) {\n            return throwError(error.error.message);\n        }\n        console.log('=====', error, error.error);\n        // this.toasterService.error(this.resourceService.messages.fmsg.m0091);\n        return throwError(error.error);\n    }\n\n    public toFormData<T>(formValue: T) {\n        const formData = new FormData();\n\n        for (const key of Object.keys(formValue)) {\n            const value = formValue[key];\n            formData.append(key, value);\n        }\n\n        return formData;\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {BaseService} from './base.service';\nimport {Observable} from 'rxjs';\nimport {GlobalService} from './global.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class UciService extends BaseService {\n    BASE_URL;\n    BASE_URL_V1;\n    BASE_URL_V2;\n\n    NL_BASE_URL;\n    DATASET_URL;\n    FORM_BASE_URL = 'https://dev.sunbirded.org/';\n\n    constructor(public http: HttpClient, public globalService: GlobalService) {\n        super(http, globalService);\n        this.globalService.baseUrl$.subscribe(value => {\n            if (value) {\n                this.BASE_URL = value + '/admin/';\n                this.BASE_URL_V1 = value + '/admin/v1/';\n                this.BASE_URL_V2 = value + '/admin/v2/';\n\n                this.DATASET_URL = value.replace('/uci') + '/dataset/v1/';\n            }\n        });\n        this.globalService.nlBaseUrl$.subscribe(value => {\n            if (value) {\n                this.NL_BASE_URL = value + '/';\n            }\n        });\n    }\n\n    fetchConversation(params): Observable<any> {\n        return this.getRequest(this.BASE_URL + 'bot/search', params, {asset: 'bot'});\n    }\n\n    searchConversation(params): Observable<any> {\n        return this.getRequest(this.BASE_URL + 'bot/search', params, {asset: 'bot'});\n    }\n\n    pauseConversation(botId): Observable<any> {\n        return this.getRequest(this.BASE_URL + `bot/pause/${botId}`, {}, {asset: 'bot'});\n    }\n\n    startConversation(botId): Observable<any> {\n        return this.getRequest(this.BASE_URL + `bot/start/${botId}`, {}, {asset: 'bot'});\n    }\n\n    deleteConversation(botId): Observable<any> {\n        return this.getRequest(this.BASE_URL + `bot/delete/${botId}`, {}, {asset: 'bot'});\n    }\n\n    getBotDetails(id) {\n        return this.getRequest(this.BASE_URL + `bot/get/${id}`, {}, {asset: 'bot'});\n    }\n\n    getCheckStartingMessage(param) {\n        return this.getRequest(this.BASE_URL + `bot/getByParam`, param, {asset: 'bot'});\n    }\n\n    botCreate(data) {\n        return this.postRequest(this.BASE_URL + 'bot', data, {asset: 'bot'});\n    }\n\n    botUpdate(id, data) {\n        return this.postRequest(this.BASE_URL + `bot/update/${id}`, data, {asset: 'bot'});\n    }\n\n    // User Segment APIs\n    fetchUserSegment(params): Observable<any> {\n        return this.getRequest(this.BASE_URL + 'userSegment/get', params, {asset: 'userSegment'});\n    }\n\n    searchUserSegment(params): Observable<any> {\n        return this.getRequest(this.BASE_URL + 'userSegment/search', params, {asset: 'userSegment'});\n    }\n\n    createUserSegment(data) {\n        return this.postSegmentRequest(this.BASE_URL + 'user-segment', data, {asset: 'userSegment'});\n    }\n\n    userSegmentQueryBuilder(data) {\n        return this.postRequest(this.BASE_URL + 'userSegment/queryBuilder', data, {asset: 'userSegment'});\n    }\n\n    // Conversation APIs\n    createLogic(data) {\n        return this.postRequest(this.BASE_URL + 'conversationLogic', data, {asset: 'conversationLogic'});\n    }\n\n    updateLogic(id, data) {\n        return this.patchRequest(this.BASE_URL + `conversationLogic/${id}`, data, {asset: 'conversationLogic'});\n    }\n\n    deleteLogic(id) {\n        return this.deleteRequest(this.BASE_URL + `conversationLogic/${id}`, {asset: 'conversationLogic'});\n    }\n\n    // Mis APIs\n    uploadFile(obj): Observable<any> {\n        return this.postRequest(this.BASE_URL + 'form/upload', this.toFormData(obj));\n    }\n\n    readForm(data) {\n        return this.postRequest(this.FORM_BASE_URL + 'api/data/v1/form/read', data);\n    }\n\n    // Exhaust API\n    getJobList(id, params) {\n        return this.getRequest(this.DATASET_URL + `request/list/${id}`, params, {asset: 'conversationLogic'});\n    }\n\n    getJobInfo(id, params) {\n        return this.getRequest(this.DATASET_URL + `request/read/${id}`, params, {asset: 'conversationLogic'});\n    }\n\n    submitExhaust(data) {\n        return this.postRequest(this.DATASET_URL + `request/submit`, data, {asset: 'conversationLogic'});\n    }\n\n    nlSegmentBotMapping(data) {\n        return this.postRequest(this.NL_BASE_URL + `segment-bot-mapping`, data);\n    }\n\n    submitSegmentData(data) {\n        return this.postRequest(this.NL_BASE_URL + `segment-bot-mapping`, data);\n    }\n}\n","import { UciService } from './uci.service';\nimport { Injectable, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport * as _ from 'lodash'\nimport { IdiscussionConfig } from '../models/uci-config.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConfigService implements OnInit {\n\n  paramsSubscription: Subscription;\n  private _config: IdiscussionConfig;\n  public checkContext: boolean;\n  public queryParams;\n  getContextData: any;\n  hasContextData: any;\n  getParams: IdiscussionConfig;\n\n\n  constructor(\n    public activatedRoute: ActivatedRoute,\n    private UciService: UciService,\n  ) { }\n\n  ngOnInit() {\n\n  }\n\n  setConfig(activatedRoute) {\n    activatedRoute.data.subscribe((config) => {\n      this._config = config.data;\n    });\n  }\n\n  setConfigFromParams(activatedRoute) {\n    activatedRoute.queryParams.subscribe((params) => {\n      const obj: IdiscussionConfig = {\n        userName : _.get(params, 'userName'),\n        categories : JSON.parse(_.get(params, 'categories'))\n      };\n      this._config = obj;\n    });\n  }\n\n  public getConfig() {\n    return this._config;\n  }\n\n  public getCategories() {\n    this.getParams = this.getConfig()\n    return _.get(this.getParams, 'categories')\n  }\n\n  public hasContext() {\n    this.hasContextData = this.getCategories() ?\n      (this.getCategories().result ? this.getCategories().result.length : null)\n      : null\n    return this.hasContextData\n  }\n\n  public getContext() {\n    this.getContextData = this.getCategories() ?\n      (this.getCategories().result ? this.getCategories().result : null)\n      : null\n    return this.getContextData\n  }\n\n  public getRouterSlug() {\n    return this._config.routerSlug ? this._config.routerSlug : '';\n  }\n}\n","export namespace UciData {\n\n  export interface IUser {\n    uid: number\n    username: string\n    fullname?: string\n    userslug: string\n    reputation: number\n    postcount: number\n    topiccount?: number\n    picture?: string | null\n    signature?: string | null\n    banned: number\n    'banned:expire'?: number\n    status: string\n    lastonline?: number | null | undefined\n    groupTitle?: string\n    groupTitleArray?: string[]\n    'icon:text'?: string\n    'icon:bgColor'?: string\n    lastonlineISO?: string\n    banned_until?: number | boolean\n    banned_until_readable?: string\n    selectedGroups?: any[]\n    custom_profile_info?: any[]\n  }\n  \n  export interface IProfile {\n    uid: number\n    username: string\n    userslug: string\n    email: string\n    'email:confirmed': number\n    joindate: number\n    lastonline: number\n    picture: string\n    fullname: string\n    location: string\n    birthday: string\n    website: string\n    aboutme: string\n    signature: string\n    uploadedpicture: string\n    profileviews: number\n    reputation: number\n    postcount: number\n    topiccount: number\n    lastposttime: number\n    banned: number\n    'banned:expire': number\n    status: string\n    flags: number\n    followerCount: number\n    followingCount: number\n    'cover:url': string\n    'cover:position': string\n    groupTitle: string\n    groupTitleArray: []\n    joindateISO: string\n    lastonlineISO: string\n    isBlocked: true\n    blocksCount: number\n    canEdit: true\n    canBan: true\n    title: string\n  }\n\n  export enum IPageName {\n    HOME = 'uci-admin',\n    LIB_ENTRY = 'lib-entry'\n  }\n}\n","import { Injectable, EventEmitter } from '@angular/core';\nimport { Subject } from 'rxjs';\n/* tslint:disable */\nimport * as _ from 'lodash'\n/* tslint:enable */\n@Injectable({\n  providedIn: 'root'\n})\nexport class UciEventsService {\n\n  public telemetryEvent = new Subject<any>();\n  public actionEvent = new EventEmitter<any>();\n\n  constructor() { }\n\n  emitTelemetry(event) {\n    // console.log('Lib Event', event);\n    if (!_.isEmpty(event)) {\n      this.telemetryEvent.next(event);\n    }\n  }\n}\n","\nimport { UciEventsService } from './uci-events.service';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\n/* tslint:disable */\nimport * as _ from 'lodash'\n/* tslint:enable */\ninterface ITelemetryObj {\n  eid: string,\n  edata: {},\n  context?: {}\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TelemetryUtilsService {\n\n  _context = []\n  currentObj = {};\n\n  constructor(\n    private discussionEvents: UciEventsService,\n    private router: Router\n  ) { }\n\n  setContext(context) {\n    this._context = context;\n    this.currentObj = _.last(context);\n  }\n\n  uppendContext(data) {\n    const matchedC = _.find(this._context, { id: data.id });\n    if (!_.isEmpty(data) && !_.isEqual(data, matchedC)) {\n      this._context.push(data);\n    }\n    this.currentObj = _.last(this._context);\n  }\n\n  deleteContext(prevTopic) {\n    const topic = _.find(this._context, prevTopic);\n    if (topic) {\n      this._context = _.reject(this._context, topic);\n    }\n  }\n\n  getContext() {\n    return this._context;\n  }\n\n  logImpression(pageId) {\n    this.discussionEvents.emitTelemetry({});\n    const impressionEvent: ITelemetryObj = {\n      eid: 'IMPRESSION',\n      edata: {\n        type: 'view',\n        pageid: pageId,\n        uri: this.router.url\n      }\n    }\n    if (this.currentObj) {\n      impressionEvent.context = { cdata: [{\n        id: _.get(this.currentObj, 'id').toString(),\n        type: _.get(this.currentObj, 'type') }\n      ]};\n    }\n    this.discussionEvents.emitTelemetry(impressionEvent);\n  }\n\n  logInteract(event, pageId) {\n    const target = _.get(event, 'currentTarget.attributes.id') ||  _.get(event, 'target.attributes.id') ||\n     _.get(event, 'srcElement.attributes.id');\n    const interactEvent: ITelemetryObj = {\n      eid: 'INTERACT',\n      edata: {\n        id: _.get(target, 'value') || _.get(event, 'action'),\n        type: 'CLICK',\n        pageid: pageId\n      }\n    };\n\n    if (this.currentObj) {\n      const object = {\n        id: _.get(this.currentObj, 'id').toString(),\n        type: _.get(this.currentObj, 'type'),\n        ver: '1'\n      };\n      object['rollup'] = this._context.length > 1 ?  this.getRollUp() : {};\n      interactEvent.context = {\n        cdata: [{\n          id: _.get(this.currentObj, 'id').toString(),\n          type: _.get(this.currentObj, 'type')\n        }], object\n      };\n    }\n\n    this.discussionEvents.emitTelemetry(interactEvent);\n  }\n\n  getRollUp() {\n\n      const rollUp = {};\n      const data = _.reject(this._context, this.currentObj);\n\n      if (this._context.length > 1) {\n        data.forEach((element, index) => {\n          // console.log('rollup', element);\n          rollUp['l' + (index + 1)] = element.toString();\n        });\n      }\n\n      if (_.get(this.currentObj, 'type') !== 'Post') {\n        return rollUp;\n      }\n\n      return {};\n\n  }\n\n}\n","import {UciData} from '../../models/uci.model';\nimport {TelemetryUtilsService} from '../../telemetry-utils.service';\nimport {UciService} from '../../services/uci.service';\nimport {Component, OnDestroy, OnInit} from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {Subscription} from 'rxjs';\n/* tslint:disable */\nimport {ConfigService} from '../../services/config.service';\nimport {IdiscussionConfig, IMenuOptions} from '../../models/uci-config.model';\nimport {GlobalService} from '../../services/global.service';\n\n/* tslint:enable */\n\n@Component({\n    selector: 'lib-side-panel',\n    templateUrl: './side-panel.component.html',\n    styleUrls: ['./side-panel.component.scss']\n})\nexport class SidePanelComponent implements OnInit, OnDestroy {\n\n    paramsSubscription: Subscription;\n\n    userName: string;\n\n    defaultPage = 'categories';\n\n    data: IdiscussionConfig;\n    hideSidePanel: boolean;\n    menu: Array<IMenuOptions> = [];\n    selectedTab: string;\n    showSideMenu: Boolean = true;\n    resourceService;\n\n    constructor(\n        public router: Router,\n        public uciService: UciService,\n        public activatedRoute: ActivatedRoute,\n        private telemetryUtils: TelemetryUtilsService,\n        private configService: ConfigService,\n        private globalService: GlobalService\n    ) {\n    }\n\n    ngOnInit() {\n        this.resourceService = this.globalService.getResourceService();\n        // TODO: loader or spinner\n        this.telemetryUtils.setContext([]);\n        this.hideSidePanel = document.body.classList.contains('widget');\n        this.telemetryUtils.logImpression(UciData.IPageName.HOME);\n        this.setMenu();\n        if (this.globalService.getResourceService() && this.globalService.getResourceService().languageSelected$) {\n            this.globalService.getResourceService().languageSelected$.subscribe(\n                lang => {\n                    this.menu = [];\n                    this.setMenu();\n                }\n            );\n        }\n    }\n\n    setMenu() {\n        this.menu = [\n            {\n                route: '',\n                label: this.resourceService.frmelmnts?.lbl?.conversations,\n                enable: true\n            }\n        ];\n    }\n\n    isActive(selectedItem) {\n        if (this.router.url.indexOf(`/${selectedItem}`) > -1 || this.selectedTab === selectedItem) {\n            if (!this.selectedTab) {\n                this.selectedTab = selectedItem;\n            }\n            return true;\n        } else if (selectedItem === 'categories' && !this.selectedTab) {\n            return true;\n        }\n        return false;\n    }\n\n    navigate(pageName: string, event?) {\n        this.selectedTab = pageName;\n        this.telemetryUtils.setContext([]);\n        if (event) {\n            this.telemetryUtils.logInteract(event, UciData.IPageName.HOME);\n        }\n        this.router.navigate([`uci-admin`]);\n        this.closeNav();\n    }\n\n    ngOnDestroy() {\n        if (this.paramsSubscription) {\n            this.paramsSubscription.unsubscribe();\n        }\n    }\n\n    showMenuButton() {\n        this.showSideMenu = !this.showSideMenu;\n    }\n\n    closeNav() {\n        this.showSideMenu = !this.showSideMenu;\n    }\n\n}\n","import {Injectable} from '@angular/core';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class Helper {\n    static copyData(id) {\n        const val = document.getElementById(id).innerText;\n        const selBox = document.createElement('textarea');\n        selBox.style.position = 'fixed';\n        selBox.style.left = '0';\n        selBox.style.top = '0';\n        selBox.style.opacity = '0';\n        selBox.value = val;\n        document.body.appendChild(selBox);\n        selBox.focus();\n        selBox.select();\n        document.execCommand('copy');\n        document.body.removeChild(selBox);\n    }\n\n    static makBotUrl(startingMessage, phoneNumber) {\n        return encodeURI('https://api.whatsapp.com/send?text=' + startingMessage + '&phone=' + phoneNumber);\n    }\n}\n","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {UciService} from '../../services/uci.service';\nimport {Router} from '@angular/router';\nimport {GlobalService} from '../../services/global.service';\nimport {Helper} from '../../utils/helper';\nimport {MatTable} from '@angular/material/table';\n\n@Component({\n    selector: 'lib-conversation-list',\n    templateUrl: './conversation-list.component.html',\n    styleUrls: ['./conversation-list.component.scss']\n})\nexport class ConversationListComponent implements OnInit {\n    @ViewChild('botTable') botTable: MatTable<any>;\n    chatBots = [];\n    displayedColumns: string[] = ['name', 'status', 'description', 'startingMessage', 'botUrl', 'botId', 'action'];\n    pager = {\n        pageSizeOptions: [5, 10, 25, 30],\n        currentPage: 1,\n        totalItems: 0,\n        pageSize: 10\n    };\n    column = '';\n    sortDirection = '';\n    reverse = false;\n    queryParams: any;\n    search;\n    user;\n    resourceService;\n\n    constructor(\n        private uciService: UciService,\n        private router: Router,\n        private globalService: GlobalService,\n    ) {\n    }\n\n    ngOnInit() {\n        this.user = this.globalService.getUser();\n        if (!this.user) {\n            this.router.navigate(['uci-admin']);\n            return;\n        }\n        this.resourceService = this.globalService.getResourceService();\n        this.getAllChatBots();\n    }\n\n    getAllChatBots() {\n        const param: any = {\n            page: this.pager.currentPage,\n            perPage: this.pager.pageSize\n        };\n\n        if (this.search) {\n            param.name = this.search;\n        }\n        this.uciService.searchConversation(param).subscribe(\n          data => this.parseConversations(data)\n        );\n\n    }\n\n    parseConversations(data) {\n        this.chatBots = [];\n        data.data.forEach(bot => {\n            const obj = {...bot, segmentText: '', userCount: 0, status: bot.status || 'Draft'};\n            obj.status = bot.status === 'enabled' ? 'Live' : bot.status === 'disabled' ? 'Disabled' : 'Draft';\n            const segmentNames = [];\n            // bot.userSegments.forEach(userSegment => {\n            //     segmentNames.push(userSegment.name);\n            //     obj.userCount += (userSegment.count || 0);\n            // });\n            obj.segmentText = segmentNames.join(', ');\n\n            obj.url = Helper.makBotUrl(bot.startingMessage || '', this.globalService.getBotPhoneNumber());\n            obj.botId = bot.id || '';\n\n            this.chatBots.push(obj);\n        });\n        this.pager.totalItems = data.totalCount;\n    }\n\n    sortColumns(column) {\n        this.column = column;\n        this.sortDirection = this.sortDirection === 'asc' ? 'desc' : 'asc';\n        this.reverse = !this.reverse;\n    }\n\n    navigateToPage(pageEvent): void {\n        this.pager.currentPage = pageEvent.pageIndex + 1;\n        this.getAllChatBots();\n    }\n\n    getSearch() {\n        this.pager.currentPage = 1;\n        this.getAllChatBots();\n    }\n\n    onAddNew() {\n        this.router.navigateByUrl('uci-admin/add');\n    }\n\n    onEdit(conversation) {\n        this.router.navigateByUrl(`uci-admin/${conversation.id}/edit`);\n    }\n\n    onStatusChange(conversation, index) {\n        if (conversation.status === 'Live') {\n            this.uciService.pauseConversation(conversation.id).subscribe(\n                data => {\n                    this.chatBots[index].status = 'Disabled';\n                    this.updateDatasource();\n                }\n            );\n        } else {\n            this.uciService.startConversation(conversation.id).subscribe(\n                data => {\n                    this.chatBots[index].status = 'Live';\n                    this.updateDatasource();\n                }\n            );\n        }\n    }\n\n    onDelete(conversation, index) {\n        this.uciService.deleteConversation(conversation.id).subscribe(\n            data => {\n                this.chatBots.splice(index, 1);\n                this.updateDatasource();\n            }\n        );\n    }\n\n    onCopy(id) {\n        Helper.copyData(id);\n    }\n\n    updateDatasource() {\n        this.botTable.renderRows();\n    }\n\n    onReport(conversation, i): void {\n        this.router.navigateByUrl(`uci-admin/${conversation.id}/reports`);\n    }\n}\n","import { Injectable } from '@angular/core';\ndeclare const iziToast: any;\n/**\n * Service to show toaster\n *\n */\n@Injectable()\nexport class ToasterService {\n\n  /**\n   * To show toaster messages\n   */\n  public iziToast: any;\n\n  /**\n\t * Constructor to create injected service(s) object\n\t */\n  constructor() {\n    this.iziToast = iziToast; // global object\n    this.iziToast.settings({\n      position: 'topCenter',\n      titleSize: '18'\n    });\n  }\n\n  /**\n   * Format success message\n   * @memberOf Services.toasterService\n   * @param {string}  message - Success message\n   */\n  success(message: string) {\n    this.iziToast.success({\n      title: message,\n      class: 'sb-toaster sb-toast-success'\n    });\n  }\n\n  /**\n   * Format information message\n   * @memberOf Services.toasterService\n   * @param {string}  message - Info message\n   */\n  info(message: string) {\n    this.iziToast.info({\n      title: message,\n      class: 'sb-toaster sb-toast-info'\n    });\n  }\n\n  /**\n   * Format error message\n   * @memberOf Services.toasterService\n   * @param {string}  message - Error message\n   */\n  error(message: string) {\n    this.iziToast.error({\n      title: message,\n      class: 'sb-toaster sb-toast-error'\n    });\n  }\n\n  /**\n   * Format warning message\n   * @memberOf Services.toasterService\n   * @param {string}  message - Warning message\n   */\n  warning(message: string) {\n    this.iziToast.warning({\n      title: message,\n      class: 'sb-toaster sb-toast-warning'\n    });\n  }\n\n  /**\n   * Custom toaster message to be configured\n   * @param config\n   */\n  custom(config: any) {\n    this.iziToast.show({\n      class: config.class,\n      message: config.message\n    });\n  }\n}\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {GlobalService} from '../../services/global.service';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\n\n@Component({\n    selector: 'lib-terms-conditions',\n    templateUrl: './terms-conditions.component.html',\n    styleUrls: ['./terms-conditions.component.scss']\n})\nexport class TermsConditionsComponent implements OnInit {\n    resourceService;\n\n    constructor(\n        private globalService: GlobalService,\n        public dialogRef: MatDialogRef<TermsConditionsComponent>,\n        @Inject(MAT_DIALOG_DATA) public data: any) {\n    }\n\n    ngOnInit() {\n        this.resourceService = this.globalService.getResourceService();\n    }\n\n    onCancel(): void {\n        this.dialogRef.close();\n    }\n\n}\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {GlobalService} from '../../services/global.service';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\n\n@Component({\n    selector: 'lib-terms-condition-confirm',\n    templateUrl: './terms-condition-confirm.component.html',\n    styleUrls: ['./terms-condition-confirm.component.scss']\n})\nexport class TermsConditionConfirmComponent implements OnInit {\n    resourceService;\n    allChecked: boolean;\n    isLoaderShow = false;\n    isSubmit = false;\n    Appropriateness = [];\n    contentDetails = [];\n    usability = [];\n    breakpoint;\n\n    constructor(\n        private globalService: GlobalService,\n        public dialogRef: MatDialogRef<TermsConditionConfirmComponent>,\n        @Inject(MAT_DIALOG_DATA) public data: any) {\n        if (data && data.isSubmit) {\n            this.isSubmit = data.isSubmit;\n        }\n    }\n\n    ngOnInit() {\n        this.breakpoint = (window.innerWidth <= 1000) ? 1 : 3;\n        this.resourceService = this.globalService.getResourceService();\n        this.Appropriateness = [\n            {\n                text: this.resourceService.frmelmnts?.lbl?.appropriatenessHate,\n                checks: false\n            },\n            {\n                text: this.resourceService.frmelmnts?.lbl?.appropriatenessAbusive,\n                checks: false\n            },\n            {\n                text: this.resourceService.frmelmnts?.lbl?.appropriatenessDiscrimination,\n                checks: false\n            },\n            {\n                text: this.resourceService.frmelmnts?.lbl?.appropriatenessChild,\n                checks: false\n            }\n        ];\n        this.contentDetails = [\n            {\n                text: this.resourceService.frmelmnts?.lbl?.contentDetailDescription,\n                checks: false\n            },\n            {\n                text: this.resourceService.frmelmnts?.lbl?.contentDetailCorrect,\n                checks: false\n            },\n            {\n                text: this.resourceService.frmelmnts?.lbl?.contentDetailAppropriate,\n                checks: false\n            },\n            {\n                text: this.resourceService.frmelmnts?.lbl?.contentDetailRelevant,\n                checks: false\n            }\n        ];\n        this.usability = [\n            {\n                text: this.resourceService.frmelmnts?.lbl?.usabilityContent,\n                checks: false\n            },\n            {\n                text: this.resourceService.frmelmnts?.lbl?.usabilityClear,\n                checks: false\n            },\n            {\n                text: this.resourceService.frmelmnts?.lbl?.usabilityAudio,\n                checks: false\n            },\n            {\n                text: this.resourceService.frmelmnts?.lbl?.usabilityNoMistakes,\n                checks: false\n            },\n            {\n                text: this.resourceService.frmelmnts?.lbl?.usabilitySimple,\n                checks: false\n            }\n        ];\n    }\n\n    onCancel(): void {\n        this.dialogRef.close();\n    }\n\n    updateAllChecked() {\n        let allChecked = true;\n        for (const val of this.Appropriateness) {\n            if (!val.checks) {\n                allChecked = false;\n                break;\n            }\n        }\n        if (allChecked) {\n            for (const val of this.contentDetails) {\n                if (!val.checks) {\n                    allChecked = false;\n                    break;\n                }\n            }\n        }\n        if (allChecked) {\n            for (const val of this.usability) {\n                if (!val.checks) {\n                    allChecked = false;\n                    break;\n                }\n            }\n        }\n        this.allChecked = allChecked;\n    }\n\n    allCheck(isAllCheck: boolean = false) {\n        this.Appropriateness.forEach(val => {\n            val.checks = isAllCheck;\n        });\n        this.contentDetails.forEach(val => {\n            val.checks = isAllCheck;\n        });\n        this.usability.forEach(val => {\n            val.checks = isAllCheck;\n        });\n        this.allChecked = true;\n        if (!isAllCheck) {\n            this.dialogRef.close();\n        }\n    }\n\n    onSubmit(event) {\n        this.dialogRef.close(event);\n    }\n\n    onResize(event) {\n        this.breakpoint = (event.target.innerWidth <= 1000) ? 1 : 3;\n    }\n}\n","import {ActivatedRoute, Router} from '@angular/router';\nimport {Component, OnInit, ViewChild} from '@angular/core';\nimport {AbstractControl, AsyncValidatorFn, FormBuilder, FormGroup, ValidationErrors, ValidatorFn, Validators} from '@angular/forms';\n\nimport {GlobalService} from '../../services/global.service';\nimport {UciService} from '../../services/uci.service';\nimport * as moment from 'moment';\nimport {ToasterService} from '../../services/toaster.service';\nimport {MatDialog} from '@angular/material/dialog';\nimport {TermsConditionsComponent} from '../terms-conditions/terms-conditions.component';\nimport {TermsConditionConfirmComponent} from '../terms-condition-confirm/terms-condition-confirm.component';\nimport {BehaviorSubject, Observable} from 'rxjs';\nimport {debounceTime, distinctUntilChanged, first, map, switchMap} from 'rxjs/operators';\n\n@Component({\n  selector: 'lib-conversation-add',\n  templateUrl: './conversation-add.component.html',\n  styleUrls: ['./conversation-add.component.scss'],\n})\nexport class ConversationAddComponent implements OnInit {\n  @ViewChild('verifyAllModal') verifyAllModal;\n  @ViewChild('horizontalStepper') horizontalStepper;\n  @ViewChild('verticalStepper') verticalStepper;\n  currentViewState = 'ADD_CONVERSATION';\n  conversationBot;\n  stepIndex = 1;\n  botLogics = [];\n  broadcastBotLogics = [];\n  userSegments = [];\n  column = '';\n  sortDirection = '';\n  reverse = false;\n  collectionListModal = false;\n  isLoaderShow = false;\n  isModalLoaderShow = false;\n  logicFormRequest = {};\n  isCheckedTermCondition = false;\n  conversationForm: FormGroup;\n  termsAndConditionModal = false;\n  verifyAllItemsModal = false;\n  conversationId;\n  selectedLogicIndex;\n  startMinDate = new Date(moment().subtract(1, 'd').format('YYYY-MM-DD'));\n  endMinDate;\n  allChecked: boolean;\n  isSubmit: boolean;\n  isStartingMessageExist: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n  isStartingMessageAvailable = false;\n  fileErrorStatus;\n  user;\n  resourceService;\n\n  constructor(\n    private uciService: UciService,\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private fb: FormBuilder,\n    private globalService: GlobalService,\n    private toasterService: ToasterService,\n    public dialog: MatDialog,\n  ) {\n    this.endMinDate = new Date(moment().add(1, 'days').format('YYYY-MM-DD'));\n  }\n\n  ngOnInit() {\n    this.user = this.globalService.getUser();\n    this.resourceService = this.globalService.getResourceService();\n    if (!this.user) {\n      this.router.navigate(['uci-admin']);\n      return;\n    }\n    this.conversationForm = this.fb.group({\n      name: ['', Validators.required],\n      description: [''],\n      purpose: ['', Validators.required],\n      startingMessage: ['', [Validators.required]],\n      startDate: [null, Validators.required],\n      endDate: [null],\n      segmentId: ['', Validators.required],\n      status: ['enabled']\n    });\n\n    // Edit case\n    this.conversationId = this.activatedRoute.snapshot.paramMap.get('id');\n    if (this.conversationId) {\n      this.getBotDetails();\n    }\n  }\n\n  userSegment() {\n    this.currentViewState = 'SELECT_SEGMENT';\n  }\n\n  onUserSegmentCancel() {\n    this.currentViewState = 'ADD_CONVERSATION';\n  }\n\n  onUserSegmentAddClick() {\n    this.currentViewState = 'ADD_SEGMENT';\n  }\n\n  onUserSegmentAdd(segments) {\n    this.userSegments = segments;\n    this.currentViewState = 'ADD_CONVERSATION';\n  }\n\n  onUserSegmentCreate(segment) {\n    this.userSegments.push(segment);\n    this.currentViewState = 'ADD_CONVERSATION';\n  }\n\n  onUserSegmentDelete(index) {\n    this.userSegments.splice(index, 1);\n  }\n\n  nextStep() {\n    if (this.stepIndex === 1 && this.conversationForm.valid) {\n      this.horizontalStepper.next();\n      this.verticalStepper.next();\n      this.stepIndex = 2;\n    }\n  }\n\n  backToStepOne() {\n    if (this.stepIndex === 2) {\n      this.stepIndex = 1;\n      this.horizontalStepper.previous();\n      this.verticalStepper.previous();\n    }\n  }\n\n  onAddCancel() {\n    this.router.navigate(['uci-admin']);\n  }\n\n  onSubmit(isTriggerBot = false, isNavigateToEnd = false) {\n    const reqObj = {\n      ...this.conversationForm.getRawValue(),\n      users: [],\n      logic: []\n    };\n    this.userSegments.forEach(userSegment => {\n      reqObj.users.push(userSegment.id);\n    });\n    this.botLogics.forEach(logic => {\n      reqObj.logic.push(logic.id);\n    });\n    if (reqObj.startDate) {\n      reqObj.startDate = moment(reqObj.startDate).format('YYYY-MM-DD');\n    }\n    if (reqObj.endDate) {\n      reqObj.endDate = moment(reqObj.endDate).format('YYYY-MM-DD');\n    }\n    if (isNavigateToEnd) {\n      reqObj.name += ' Broadcast';\n      reqObj.startingMessage += ' Broadcast';\n    }\n\n    this.isLoaderShow = true;\n\n    if (this.conversationId) {\n      this.uciService.botUpdate(this.conversationId, {data: reqObj}).subscribe(\n        data => {\n          this.closeVerifyModal();\n          this.isLoaderShow = false;\n          this.afterBotSubmit({queryParams: {text: reqObj.startingMessage, botId: this.conversationId}});\n        }, error => {\n          this.isLoaderShow = false;\n          this.verifyAllItemsModal = true;\n          this.allChecked = false;\n          if (error.result && error.result.error) {\n            this.toasterService.error(error.result.error);\n          }\n        }\n      );\n    } else {\n      this.uciService.botCreate({data: reqObj}).subscribe(\n        (data: any) => {\n          if (!isNavigateToEnd) {\n            this.conversationBot = {text: reqObj.startingMessage, botId: data.id};\n          }\n          if (isTriggerBot) {\n            this.startConversation(data, isNavigateToEnd);\n          } else {\n            this.closeVerifyModal();\n            this.isLoaderShow = false;\n            if (isNavigateToEnd) {\n              this.afterBotSubmit({queryParams: {text: reqObj.startingMessage, botId: data.id}});\n            } else {\n              this.createSegment();\n            }\n          }\n\n        }, error => {\n          this.isLoaderShow = false;\n          this.verifyAllItemsModal = true;\n          this.allChecked = false;\n          if (error.result && error.result.error) {\n            this.toasterService.error(error.result.error);\n          }\n        }\n      );\n    }\n  }\n\n  afterBotSubmit(extras) {\n    const mappingData = {\n      segmentId: parseInt(this.conversationForm.value.segmentId, 10),\n      botId: this.conversationBot.botId\n    };\n\n    this.uciService.nlSegmentBotMapping(mappingData).subscribe(\n      data => {\n        this.router.navigate(['uci-admin/success'], extras);\n      }\n    );\n  }\n\n  createSegment() {\n    const segData = {\n      name: this.conversationForm.getRawValue().name,\n      all: {\n        type: 'get',\n        config: {\n          url: `http://103.154.251.109:8070/segments/${this.conversationForm.getRawValue().segmentId}/mentors?deepLink=nipunlakshya://chatbot&botId=${this.conversationBot.botId}`,\n          type: 'GET',\n          cadence: {\n            perPage: 5,\n            retries: 5,\n            timeout: 60,\n            concurrent: true,\n            pagination: true,\n            concurrency: 10,\n            'retries-interval': 10\n          },\n          pageParam: 'page',\n          credentials: {},\n          totalRecords: 200000\n        }\n      },\n      byID: {},\n      byPhone: {}\n    };\n    segData.byID = segData.all;\n    segData.byPhone = segData.all;\n    this.uciService.createUserSegment(segData).subscribe(\n      data => {\n        this.userSegments.push(data);\n        this.createBroadcastBotLogic();\n      }\n    );\n  }\n\n  createBroadcastBotLogic() {\n    for (const botLogic of this.botLogics) {\n      botLogic.adapter = this.globalService.getBroadcastAdapterId();\n      botLogic.transformers[0].meta.type = 'broadcast';\n      botLogic.transformers[0].meta.data = {botId: this.conversationBot.botId};\n\n      this.uciService.createLogic({data: botLogic}).subscribe(\n        (data: any) => {\n          this.isModalLoaderShow = false;\n          const existingLogic = botLogic;\n          delete existingLogic.id;\n          this.broadcastBotLogics.push({\n            id: data.id,\n            ...existingLogic,\n          });\n          this.afterBroadcastBotLogic();\n        }, error => {\n          this.isModalLoaderShow = false;\n        }\n      );\n    }\n  }\n\n  afterBroadcastBotLogic() {\n    if (this.botLogics.length <= this.broadcastBotLogics.length) {\n      this.botLogics = this.broadcastBotLogics;\n      this.onSubmit(true, true);\n    }\n  }\n\n  startConversation(bot, isNavigateToEnd = false) {\n    this.uciService.startConversation(bot.id).subscribe(\n      data => {\n        this.isLoaderShow = false;\n        this.closeVerifyModal();\n        if (isNavigateToEnd) {\n          this.afterBotSubmit({queryParams: {text: this.conversationForm.value.startingMessage, botId: bot.id}});\n        } else {\n          this.createSegment();\n        }\n      }, error => {\n        this.verifyAllItemsModal = true;\n        this.allChecked = false;\n        this.isLoaderShow = false;\n        if (error.result && error.result.error) {\n          this.toasterService.error(error.result.error);\n        }\n      }\n    );\n  }\n\n  closeVerifyModal() {\n    if (this.verifyAllModal) {\n      this.verifyAllModal.deny('denied');\n    }\n    this.verifyAllItemsModal = false;\n  }\n\n  openTermAndConditionModel() {\n    // this.termsAndConditionModal = true;\n    const dialogRef = this.dialog.open(TermsConditionsComponent);\n\n    dialogRef.afterClosed().subscribe(result => {\n    });\n  }\n\n  openItemsVerifyModal(isSubmitBtn: boolean) {\n    this.verifyAllItemsModal = true;\n    this.allChecked = false;\n    this.isSubmit = isSubmitBtn;\n    const dialogRef = this.dialog.open(TermsConditionConfirmComponent, {\n      data: {isSubmit: this.isSubmit}\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result !== undefined) {\n        this.onSubmit(result);\n      }\n    });\n  }\n\n  getBotDetails() {\n    this.uciService.getBotDetails(this.conversationId).subscribe((val: any) => {\n      if (val.data) {\n        this.conversationForm.patchValue({\n          name: val.data.name,\n          description: val.data.description,\n          purpose: val.data.purpose,\n          startingMessage: val.data.startingMessage,\n          status: val.data.status,\n          startDate: val.data.startDate ? new Date(moment(val.data.startDate).format('YYYY-MM-DD')) : null,\n          endDate: val.data.endDate ? new Date(moment(val.data.endDate).format('YYYY-MM-DD')) : null\n        });\n        if (val.data.startDate) {\n          const minDate = moment().isBefore(moment(val.data.startDate)) ? moment().subtract(1, 'd') : moment(val.data.startDate);\n          this.startMinDate = new Date(moment(minDate).format('YYYY-MM-DD'));\n        }\n        if (val.data.userSegments) {\n          this.userSegments = val.data.userSegments;\n        }\n        if (val.data.logic) {\n          this.botLogics = val.data.logic;\n        }\n      }\n    });\n  }\n\n  onStarringMessageChange() {\n    // this.uciService.searchConversation({startingMessage: this.conversationForm.value.startingMessage, match: true}).subscribe(val => {\n    //   console.log(val);\n    //   if (val && val.data && val.data.length) {\n    //     console.log(val.data);\n    //     this.isStartingMessageExist.next((this.conversationId !== val.data[0].id));\n    //   } else {\n    //     this.isStartingMessageExist.next(false);\n    //   }\n    // }, error => {\n    //   this.isStartingMessageExist.next(false);\n    // });\n  }\n\n  private validateStartingMessage(): AsyncValidatorFn {\n    return control => control.valueChanges\n      .pipe(\n        debounceTime(400),\n        distinctUntilChanged(),\n        switchMap(value => this.uciService.searchConversation({startingMessage: value, match: true})),\n        map((val) => {\n          console.log('---', val);\n          let isStartingMessageExist = false;\n          if (val && val.data && val.data.length) {\n            isStartingMessageExist = (this.conversationId !== val.data[0].id);\n          }\n          console.log('vaaaaaaa', isStartingMessageExist, isStartingMessageExist ? {alreadyExist: true} : null);\n          return isStartingMessageExist ? {alreadyExist: true} : null;\n        }));\n    /*return (control: AbstractControl): Observable<ValidationErrors | null> => {\n      // return this.isStartingMessageExist.pipe(\n      //   map(val => {\n      //     console.log('vaaaaaaa', val, val ? {alreadyExist: true} : null);\n      //     return val ? {alreadyExist: true} : null;\n      //   })\n      // );\n\n\n\n      // return this.uciService.searchConversation({startingMessage: control.value, match: true})\n      //   .pipe(\n      //     debounceTime(1000),\n      //     map(val => {\n      //       console.log(val);\n      //       let isStartingMessageExist = false;\n      //       if (val && val.data && val.data.length) {\n      //         isStartingMessageExist = (this.conversationId !== val.data[0].id);\n      //       }\n      //       console.log('-----', isStartingMessageExist);\n      //       return isStartingMessageExist ? {alreadyExist: true} : null;\n      //     })\n      //   );\n      // return {alreadyExist: true};\n    };*/\n  }\n\n  onBotLogicModify(logics) {\n    this.botLogics = logics;\n  }\n}\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {UciService} from '../../services/uci.service';\nimport {Router} from '@angular/router';\nimport {GlobalService} from '../../services/global.service';\n\n@Component({\n    selector: 'lib-user-segment-list',\n    templateUrl: './user-segment-list.component.html',\n    styleUrls: ['./user-segment-list.component.css']\n})\nexport class UserSegmentListComponent implements OnInit {\n    @Output() cancel = new EventEmitter<boolean>();\n    @Output() add = new EventEmitter<any>();\n    @Input() selectedUserSegments = [];\n\n    userSegments = [];\n    selectedUserSegmentMap = {};\n    pager: any = {\n        totalItems: 0,\n        currentPage: 1,\n        pageSize: 10,\n        totalPages: 0,\n        startPage: 0,\n        endPage: 0,\n        startIndex: 0,\n        endIndex: 0,\n        pages: []\n    };\n    pageNumber = 1;\n    column = '';\n    reverse = false;\n    queryParams: any;\n    search;\n    resourceService;\n\n    constructor(\n        private uciService: UciService,\n        private route: Router,\n        private globalService: GlobalService\n    ) {\n    }\n\n    ngOnInit() {\n        this.resourceService = this.globalService.getResourceService();\n        this.selectedUserSegments.forEach(selectedUserSegment => {\n            this.selectedUserSegmentMap[selectedUserSegment.id] = selectedUserSegment;\n        });\n\n        this.getUserSegment();\n    }\n\n    getUserSegment() {\n        const param: any = {\n            page: this.pager.currentPage,\n            perPage: this.pager.pageSize\n        };\n\n        if (this.search) {\n            param.name = this.search;\n            this.uciService.searchUserSegment(param).subscribe(\n                data => this.parseUserSegments(data)\n            );\n        } else {\n            this.uciService.fetchUserSegment(param).subscribe(\n                data => this.parseUserSegments(data)\n            );\n        }\n    }\n\n    parseUserSegments(data) {\n        this.userSegments = data.data;\n        this.pager.totalItems = data.total;\n        this.pager.totalPages = Math.ceil(data.total / this.pager.pageSize);\n        this.pager.pages = [];\n        let i = 1;\n        while (i <= Math.ceil(data.total / this.pager.pageSize)) {\n            this.pager.pages.push(i);\n            i++;\n        }\n    }\n\n    navigateToPage(page: number): undefined | void {\n        if (page < 1 || page > this.pager.totalPages) {\n            return;\n        }\n        this.pageNumber = page;\n        this.pager.currentPage = page;\n        this.getUserSegment();\n    }\n\n    getSearch() {\n        this.getUserSegment();\n    }\n\n    onCancel() {\n        this.cancel.emit(false);\n    }\n\n    onCheck(event, userSegment) {\n        if (event.target.checked) {\n            this.selectedUserSegmentMap[userSegment.id] = userSegment;\n        } else {\n            delete this.selectedUserSegmentMap[userSegment.id];\n        }\n    }\n\n    onAdd() {\n        this.add.emit(Object.values(this.selectedUserSegmentMap));\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {BaseService} from './base.service';\nimport {GlobalService} from './global.service';\n\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class UciGraphQlService extends BaseService {\n    BASE_URL;\n\n    constructor(public http: HttpClient, public globalService: GlobalService) {\n        super(http, globalService);\n        this.globalService.baseUrl$.subscribe(value => {\n            if (value) {\n                this.BASE_URL = value + '/uci-api/gql';\n            }\n        });\n    }\n\n    getState() {\n        return this.baseRequest({\n            query: `query getListOfStates{\n            organisation(distinct_on:state){\n            state}}`\n        });\n    }\n\n    getDistrict(param) {\n        return this.baseRequest({\n            query: `query getListOfDistrictInState($state:String){\n            organisation(where:{state:{_eq:$state}},  distinct_on:district){\n            state\n            district}}`,\n            variables: param\n        });\n    }\n\n    getBlock(param) {\n        return this.baseRequest({\n            query: `query getListOfBlocksUnderDistrict($district:[String!],$state:String){\n            blocks: organisation(where:{state:{_eq:$state},district:{_in:$district}},distinct_on:block){\n            block\n            district\n            state\n            }\n            }`,\n            variables: param\n        });\n    }\n\n    getSchoolDetails(param) {\n        return this.baseRequest({\n            query: `query getListOfSchoolsUnderBlocksAndDistrict($district:[String!],$state:String,$block:[String!]){\n            schools:organisation(where:{state:{_eq:$state},district:{_in:$district},block:{_in:$block}}){\n            school\n            school_code\n            block\n            district\n            state\n            }\n            }`,\n            variables: param\n        });\n    }\n\n    getClusters(param) {\n        return this.baseRequest({\n            query: `query getListOfClustersUnderBlockAndDistrict($block:[String!],$district:[String!],$state:String){\n            clusters:organisation(where:{state:{_eq:$state},district:{_in:$district},block:{_in:$block}},distinct_on:cluster){\n            cluster\n            }\n            }`,\n            variables: param\n        });\n    }\n\n    getRole() {\n        return this.baseRequest({\n            query: `query fetchListOfRoles{\n                   role{\n                   id\n                   name\n                   }\n                   }`\n        });\n    }\n\n    getBoards() {\n        return this.baseRequest({\n            query: `query listOfBoards{\n                  board{\n                  id\n                  name}}`\n        });\n    }\n\n    private baseRequest(body) {\n        return this.http.post(this.BASE_URL, body, {});\n    }\n}\n","import {Component, EventEmitter, OnInit, Output} from '@angular/core';\nimport {UciService} from '../../services/uci.service';\nimport {UciGraphQlService} from '../../services/uci-graph-ql.service';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {GlobalService} from '../../services/global.service';\n\n@Component({\n    selector: 'lib-user-segment-add',\n    templateUrl: './user-segment-add.component.html',\n    styleUrls: ['./user-segment-add.component.css']\n})\nexport class UserSegmentAddComponent implements OnInit {\n    @Output() cancel = new EventEmitter<boolean>();\n    @Output() add = new EventEmitter<any>();\n    formFieldProperties: Array<any>;\n    userSegment: any = {};\n    isLoaderShow = false;\n    districts = [];\n    blocks = [];\n    schools = [];\n    clusters = [];\n    roles = [];\n    boards = [];\n    grade = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12];\n    subjects = [];\n    userSegmentForm: FormGroup;\n    state = 'Haryana';\n    resourceService;\n\n    constructor(private uciService: UciService,\n                private fb: FormBuilder,\n                private uciGraphQlService: UciGraphQlService,\n                private globalService: GlobalService) {\n    }\n\n    ngOnInit() {\n        this.resourceService = this.globalService.getResourceService();\n        this.getUciDistrict();\n        this.getUciRole();\n        this.getUciBoard();\n        this.userSegmentForm = this.fb.group({\n            name: ['', Validators.required],\n            description: [''],\n            district: [''],\n            block: [''],\n            cluster: [''],\n            school: [''],\n            role: [''],\n            board: [''],\n            grade: [''],\n            subject: ['']\n        });\n\n        this.userSegmentForm.get('district').valueChanges.subscribe(item => {\n            if (item) {\n                this.userSegmentForm.get('block').patchValue('');\n                this.blocks = [];\n                this.userSegmentForm.get('cluster').patchValue('');\n                this.userSegmentForm.get('school').patchValue('');\n                this.schools = [];\n                this.clusters = [];\n                this.getUciBlock();\n            }\n        });\n        this.userSegmentForm.get('block').valueChanges.subscribe(item => {\n            if (item) {\n                this.userSegmentForm.get('cluster').patchValue('');\n                this.userSegmentForm.get('school').patchValue('');\n                this.schools = [];\n                this.clusters = [];\n                this.getUciCluster();\n                this.getUciSchoolDetails();\n            }\n        });\n    }\n\n    onCancel() {\n        this.cancel.emit(false);\n    }\n\n    onAdd() {\n        if (this.userSegmentForm.invalid) {\n            return;\n        }\n        this.isLoaderShow = true;\n        const formValue = this.userSegmentForm.value;\n        const locationData = [];\n        const blockData = [];\n        const districtData = [];\n        for (const school of this.schools) {\n            if (formValue.school.indexOf(school.school) !== -1) {\n                locationData.push(school);\n                if (blockData.indexOf(school.block) === -1) {\n                    blockData.push(school.block);\n                    districtData.push(school.district);\n                }\n            }\n            if (locationData.length === formValue.school) {\n                break;\n            }\n        }\n        if (blockData.length < formValue.block.length) {\n            for (const block of this.blocks) {\n                if (formValue.block.indexOf(block.block) !== -1 && blockData.indexOf(block.block) === -1) {\n                    locationData.push(block);\n                    blockData.push(block.block);\n                    districtData.push(block.district);\n                }\n                if (blockData.length === formValue.block) {\n                    break;\n                }\n            }\n        }\n        if (districtData.length < formValue.district.length) {\n            for (const district of this.districts) {\n                if (formValue.district.indexOf(district.district) !== -1 && districtData.indexOf(district.district) === -1) {\n                    locationData.push(district);\n                }\n            }\n        }\n        const param = {\n            data: {\n                userLocation: locationData,\n                roles: formValue.role,\n                userType: {\n                    type: 'student'\n                },\n                framework: {\n                    board: formValue.board,\n                    gradeLevel: formValue.grade\n                }\n            }\n        };\n\n        this.uciService.userSegmentQueryBuilder(param).subscribe(response => {\n            if (response) {\n                const items = {\n                    ...response,\n                    name: formValue.name,\n                    description: formValue.description\n                };\n                this.uciService.createUserSegment({data: items}).subscribe(\n                    (data: any) => {\n                        this.isLoaderShow = false;\n                        this.afterAdd(data.inserted);\n                    }, err => {\n                        this.isLoaderShow = false;\n                    }\n                );\n            }\n        }, error => {\n            this.isLoaderShow = false;\n        });\n    }\n\n    afterAdd(data) {\n        this.add.emit(data);\n    }\n\n    getUciState() {\n        this.uciGraphQlService.getState().subscribe(res => {\n        });\n    }\n\n    getUciDistrict() {\n        const params = {\n            state: this.state\n        };\n        this.uciGraphQlService.getDistrict(params).subscribe((res: any) => {\n            this.districts = [];\n            if (res && res.data && res.data.organisation && res.data.organisation.length) {\n                this.districts = res.data.organisation;\n            }\n        });\n    }\n\n    getUciBlock() {\n        const formVal = this.userSegmentForm.value;\n        const params = {\n            state: this.state, district: formVal.district\n        };\n        this.uciGraphQlService.getBlock(params).subscribe((res: any) => {\n            this.blocks = [];\n            if (res && res.data && res.data.blocks && res.data.blocks.length) {\n                this.blocks = res.data.blocks;\n            }\n        });\n    }\n\n    getUciCluster() {\n        const formVal = this.userSegmentForm.value;\n        const params = {\n            state: this.state, district: formVal.district, block: formVal.block\n        };\n        this.uciGraphQlService.getClusters(params).subscribe((res: any) => {\n            this.clusters = [];\n            if (res && res.data && res.data.clusters && res.data.clusters.length) {\n                if (res.data.clusters[0].cluster) {\n                    this.clusters = res.data.clusters;\n                }\n            }\n        });\n    }\n\n    getUciSchoolDetails() {\n        const formVal = this.userSegmentForm.value;\n        const params = {\n            state: this.state, district: formVal.district, block: formVal.block\n        };\n        this.uciGraphQlService.getSchoolDetails(params).subscribe((res: any) => {\n            this.schools = [];\n            if (res && res.data && res.data.schools && res.data.schools.length) {\n                this.schools = res.data.schools;\n            }\n        });\n    }\n\n    getUciRole() {\n        this.uciGraphQlService.getRole().subscribe((res: any) => {\n            if (res && res.data && res.data.role && res.data.role.length) {\n                this.roles = res.data.role;\n            }\n        });\n    }\n\n    getUciBoard() {\n        this.uciGraphQlService.getBoards().subscribe((res: any) => {\n            if (res && res.data && res.data.board && res.data.board.length) {\n                this.boards = res.data.board;\n            }\n        });\n    }\n}\n","import {Component, OnInit} from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {Helper} from '../../utils/helper';\nimport {GlobalService} from '../../services/global.service';\n\n@Component({\n    selector: 'lib-conversation-success',\n    templateUrl: './conversation-success.component.html',\n    styleUrls: ['./conversation-success.component.scss']\n})\nexport class ConversationSuccessComponent implements OnInit {\n    url = '';\n    botId = '';\n    resourceService;\n\n    constructor(private router: Router,\n                private activatedRoute: ActivatedRoute,\n                private globalService: GlobalService) {\n    }\n\n    ngOnInit(): void {\n        this.url = Helper.makBotUrl(this.activatedRoute.snapshot.queryParams.text || '', this.globalService.getBotPhoneNumber());\n        this.botId = this.activatedRoute.snapshot.queryParams.botId || '';\n        this.resourceService = this.globalService.getResourceService();\n    }\n\n    onCopy(id) {\n        Helper.copyData(id);\n    }\n\n    onClose() {\n        this.router.navigate(['/uci-admin']);\n    }\n\n}\n","import {Component, Inject} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {GlobalService} from '../../services/global.service';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {UciService} from '../../services/uci.service';\nimport {ToasterService} from '../../services/toaster.service';\n\n@Component({\n    selector: 'lib-add-logic',\n    templateUrl: './add-logic.component.html',\n    styleUrls: ['./add-logic.component.scss'],\n})\nexport class AddLogicComponent {\n    resourceService;\n    isModalLoaderShow = false;\n    logicForm: FormGroup;\n    odkFileAlreadyExist = false;\n    fileErrorStatus;\n    breakpoint;\n\n    constructor(\n        private uciService: UciService,\n        private fb: FormBuilder,\n        private toasterService: ToasterService,\n        private globalService: GlobalService,\n        public dialogRef: MatDialogRef<AddLogicComponent>,\n        @Inject(MAT_DIALOG_DATA) public data: any) {\n        this.resourceService = this.globalService.getResourceService();\n        this.initialize();\n        if (data && data.id) {\n            this.patchValue(data);\n        }\n    }\n\n    initialize() {\n        this.breakpoint = (window.innerWidth <= 1000) ? 1 : 3;\n        this.logicForm = this.fb.group({\n            id: [null],\n            name: ['', Validators.required],\n            description: [''],\n            formId: ['', Validators.required]\n        });\n    }\n\n    patchValue(item) {\n        this.logicForm.patchValue(\n            {\n                id: item.id,\n                name: item.name,\n                description: item.description,\n                formId: item.formID\n            }\n        );\n    }\n\n    onCancel(): void {\n        this.dialogRef.close();\n    }\n\n    onLogicAdd(): void {\n        this.dialogRef.close(this.logicForm.value);\n    }\n\n    onFileUpload(event) {\n        if (!event.target.files.length) {\n            return;\n        }\n        const file = event.target.files[0];\n        const obj = {\n            form: file\n        };\n        this.logicForm.patchValue({formId: ''});\n        this.isModalLoaderShow = true;\n        this.uciService.uploadFile(obj).subscribe((fileInfo: any) => {\n                if (fileInfo.data) {\n                    this.logicForm.patchValue({formId: fileInfo.data.formID});\n                }\n                this.isModalLoaderShow = false;\n                this.odkFileAlreadyExist = false;\n            }, error => {\n                this.isModalLoaderShow = false;\n                this.odkFileAlreadyExist = true;\n                this.fileErrorStatus = error.status;\n                if (error.result && error.result.error) {\n                    this.toasterService.error(error.result.error);\n                }\n            }\n        );\n    }\n\n    manualDownload(): void {\n        window.open(this.globalService.getBlobUrl().replace('/player', '') + 'UCI%20_%20ODK%20Instruction%20Manual.pdf', '_blank');\n    }\n\n    sampleODKDownload(): void {\n        window.open(this.globalService.getBlobUrl().replace('/player', '') + 'Sample_ODK.xlsx', '_blank');\n    }\n\n    onResize(event) {\n        this.breakpoint = (event.target.innerWidth <= 1000) ? 1 : 3;\n    }\n\n}\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {UciService} from '../../services/uci.service';\nimport {GlobalService} from '../../services/global.service';\nimport {AddLogicComponent} from '../add-logic/add-logic.component';\nimport {MatDialog} from '@angular/material/dialog';\nimport {MatTableDataSource} from '@angular/material/table';\n\n@Component({\n    selector: 'lib-logic-list',\n    templateUrl: './logic-list.component.html',\n    styleUrls: ['./logic-list.component.scss']\n})\nexport class LogicListComponent implements OnInit {\n    @Input() botLogics = [];\n    @Input() notificationBotLogics = [];\n    @Output() modify = new EventEmitter<any>();\n    datasource = new MatTableDataSource<any>([]);\n    logicFormRequest = {};\n    selectedLogicIndex;\n    fileErrorStatus;\n    isModalLoaderShow = false;\n    collectionListModal = false;\n    displayedColumns: string[] = ['sno', 'name', 'description', 'action'];\n    resourceService;\n\n    constructor(\n        private uciService: UciService,\n        private globalService: GlobalService,\n        public dialog: MatDialog,\n    ) {\n    }\n\n    ngOnInit() {\n        this.resourceService = this.globalService.getResourceService();\n        this.datasource.data = this.botLogics;\n    }\n\n    openModel(logic = null, index = null) {\n        this.logicFormRequest = {};\n        this.collectionListModal = true;\n        // this.logicForm.reset();\n        this.fileErrorStatus = null;\n        let data = {};\n        if (logic && logic.id) {\n            this.selectedLogicIndex = index;\n            data = {\n                id: logic.id,\n                name: logic.name,\n                description: logic.description,\n                formId: logic.transformers[0].meta.formID\n            };\n        }\n        const dialogRef = this.dialog.open(AddLogicComponent, {\n            width: '850px',\n            data\n        });\n\n        dialogRef.afterClosed().subscribe(logicFormData => {\n            console.log('mat-dialog-result', logicFormData);\n            if (logicFormData) {\n                this.onLogicAdd(logicFormData);\n            }\n        });\n    }\n\n    onLogicAdd(logicFormData) {\n        const reqData: any = {\n            id: logicFormData.id,\n            name: logicFormData.name,\n            description: logicFormData.description,\n            transformers: [\n                {\n                    id: '774cd134-6657-4688-85f6-6338e2323dde',\n                    meta: {\n                        form: 'https://hosted.my.form.here.com',\n                        formID: logicFormData.formId,\n                        title: logicFormData.name,\n                        body: logicFormData.description,\n                        templateType: 'JS_TEMPLATE_LITERALS'\n                    }\n                }\n            ],\n            adapter: this.globalService.getAdapterId()\n        };\n\n        this.isModalLoaderShow = true;\n        if (logicFormData.id) {\n            this.uciService.updateLogic(logicFormData.id, {data: reqData}).subscribe(\n                (data: any) => {\n                    this.isModalLoaderShow = false;\n                    const existingLogic = reqData;\n                    delete existingLogic.id;\n                    this.botLogics[this.selectedLogicIndex] = Object.assign(this.botLogics[this.selectedLogicIndex], existingLogic);\n                    this.onModify();\n                }, error => {\n                    this.isModalLoaderShow = false;\n                }\n            );\n        } else {\n            this.uciService.createLogic({data: reqData}).subscribe(\n                (data: any) => {\n                    this.isModalLoaderShow = false;\n                    const existingLogic = reqData;\n                    delete existingLogic.id;\n                    this.botLogics.push({\n                        id: data.id,\n                        ...existingLogic,\n                    });\n                    this.onModify();\n                }, error => {\n                    this.isModalLoaderShow = false;\n                }\n            );\n        }\n    }\n\n    onDelete(logic, index) {\n        this.uciService.deleteLogic(logic.id).subscribe(\n            file => {\n                this.botLogics.splice(index, 1);\n            }\n        );\n    }\n\n    onModify() {\n        this.datasource.data = this.botLogics;\n        this.modify.emit(this.botLogics);\n    }\n}\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {UciService} from '../../services/uci.service';\nimport {GlobalService} from '../../services/global.service';\nimport {MatDialog} from '@angular/material/dialog';\nimport {FormBuilder, FormGroup} from '@angular/forms';\nimport * as moment from 'moment';\nimport {debounceTime} from 'rxjs/operators';\n\n@Component({\n    selector: 'lib-conversation-setup',\n    templateUrl: './conversation-setup.component.html',\n    styleUrls: ['./conversation-setup.component.scss']\n})\nexport class ConversationSetupComponent implements OnInit {\n    @Input() conversationForm: FormGroup;\n    @Input() isStartingMessageExist;\n    @Input() startMinDate;\n    @Input() userSegments;\n    @Output() starringMessageChange = new EventEmitter<any>();\n    @Output() userSegmentDelete = new EventEmitter<any>();\n    matDateBreakpoint;\n    endMinDate;\n    resourceService;\n\n    constructor(\n        private fb: FormBuilder,\n        private uciService: UciService,\n        private globalService: GlobalService,\n        public dialog: MatDialog,\n    ) {\n    }\n\n    ngOnInit() {\n        this.matDateBreakpoint = (window.innerWidth <= 1000) ? 1 : 2;\n        this.resourceService = this.globalService.getResourceService();\n        if (this.conversationForm) {\n            // start date and end date value change\n            this.conversationForm.get('startDate').valueChanges.subscribe(val => {\n                if ((this.conversationForm.value.endDate && moment(this.conversationForm.value.endDate).isBefore(moment(val))) || !val) {\n                    this.conversationForm.get('endDate').patchValue(null);\n                }\n                const tempDate = moment(val).format('YYYY-MM-DD');\n                this.endMinDate = new Date(tempDate);\n            });\n\n            this.conversationForm.get('startingMessage').valueChanges\n                .pipe(debounceTime(1000))\n                .subscribe(\n                    value => {\n                        this.onStarringMessageChange();\n                    }\n                );\n        }\n    }\n\n    onStarringMessageChange() {\n        this.starringMessageChange.emit({});\n    }\n\n    onUserSegmentDelete(index) {\n        this.userSegmentDelete.emit(index);\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {GlobalService} from './global.service';\nimport {MatPaginatorIntl} from '@angular/material/paginator';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class PaginatorIntl extends MatPaginatorIntl {\n    resourceService;\n\n    constructor(public globalService: GlobalService) {\n        super();\n        this.globalService.resourceService$.subscribe(d => {\n            this.resourceService = d;\n            this.getPaginatorIntl();\n            if (this.globalService.getResourceService() && this.globalService.getResourceService().languageSelected$) {\n                this.globalService.getResourceService().languageSelected$.subscribe(\n                    lang => {\n                        this.getPaginatorIntl();\n                    }\n                );\n            }\n        });\n    }\n\n    getPaginatorIntl() {\n        this.itemsPerPageLabel = this.resourceService.frmelmnts?.lbl?.itemsPerPageLabel;\n        this.nextPageLabel = this.resourceService.frmelmnts?.lbl?.nextPageLabel;\n        this.previousPageLabel = this.resourceService.frmelmnts?.lbl?.previousPageLabel;\n        this.firstPageLabel = this.resourceService.frmelmnts?.lbl?.firstPageLabel;\n        this.lastPageLabel = this.resourceService.frmelmnts?.lbl?.lastPageLabel;\n        this.changes.next();\n        // this.getRangeLabel = this.getRangeLabel.bind(this);\n    }\n\n    getRangeLabel = (page: number, pageSize: number, length: number): string => {\n        // tslint:disable-next-line:max-line-length\n        const of = this.resourceService.frmelmnts && this.resourceService.frmelmnts.lbl && this.resourceService.frmelmnts.lbl.of ? this.resourceService.frmelmnts?.lbl?.of : 'of';\n        if (length === 0 || pageSize === 0) {\n            return '0 ' + of + ' ' + length;\n        }\n        length = Math.max(length, 0);\n        const startIndex = page * pageSize > length ? (Math.ceil(length / pageSize) - 1) * pageSize : page * pageSize;\n\n        const endIndex = Math.min(startIndex + pageSize, length);\n        return startIndex + 1 + ' - ' + endIndex + ' ' + of + ' ' + length;\n    }\n}\n","import {Component, OnInit} from '@angular/core';\nimport {GlobalService} from '../../services/global.service';\nimport {FormBuilder, FormGroup} from '@angular/forms';\nimport {UciService} from '../../services/uci.service';\nimport {ToasterService} from '../../services/toaster.service';\nimport {v4 as uuidv4} from 'uuid';\nimport {ActivatedRoute, Router} from '@angular/router';\n\n@Component({\n    selector: 'lib-exhaust-report',\n    templateUrl: './exhaust-report.component.html',\n    styleUrls: ['./exhaust-report.component.scss'],\n})\nexport class ExhaustReportComponent implements OnInit {\n    resourceService;\n    user;\n    conversationId;\n    exhaustTypes = [\n        {name: 'Response Exhaust', value: 'uci-response-exhaust'},\n        {name: 'Private Exhaust', value: 'uci-private-exhaust'},\n    ];\n    filterForm: FormGroup;\n    filters = {\n        startDate: null,\n        endDate: null,\n        exhaustType: null,\n    };\n    displayedColumns: string[] = ['requestid', 'requesttype', 'requestdate', 'conversationid', 'startdate', 'enddate', 'status', 'reportlink', 'generateddate'];\n    dataSource = [\n        {\n            requestid: 'dhheb1234',\n            requesttype: 'Response Exhaust',\n            requestdate: '14 / 03 / 2022',\n            conversationid: 'uik123',\n            startdate: '10 / 03 / 2022',\n            enddate: '11/03/2022',\n            status: 'Submitted',\n            reportlink: '-',\n            generateddate: '-'\n        },\n        {\n            requestid: 'dhheb9876',\n            requesttype: 'Private Exhaust',\n            requestdate: '14 / 03 / 2022',\n            conversationid: 'uik123',\n            startdate: '10 / 03 / 2022',\n            enddate: '11/03/2022',\n            status: 'Success',\n            reportlink: '-',\n            generateddate: '15 / 03 / 2022'\n        },\n    ];\n\n    constructor(\n        private fb: FormBuilder,\n        private uciService: UciService,\n        private router: Router,\n        private activatedRoute: ActivatedRoute,\n        private toasterService: ToasterService,\n        private globalService: GlobalService) {\n        this.resourceService = this.globalService.getResourceService();\n    }\n\n    ngOnInit() {\n        this.user = this.globalService.getUser();\n        this.resourceService = this.globalService.getResourceService();\n        if (!this.user) {\n            this.router.navigate(['uci-admin']);\n            return;\n        }\n        this.filterForm = this.fb.group({\n            startDate: [''],\n            endDate: [''],\n            exhaustType: [this.exhaustTypes[0].value],\n        });\n        // this.filters.exhaustType = this.exhaustTypes[0].value;\n        this.conversationId = this.activatedRoute.snapshot.paramMap.get('id');\n        this.getJobList();\n    }\n\n    getJobList() {\n        this.uciService.getJobList(this.conversationId, {}).subscribe(\n            data => {\n                console.log('job list data');\n            }\n        );\n    }\n\n    getJobInfo() {\n        this.uciService.getJobInfo(this.conversationId, {}).subscribe(\n            data => {\n                console.log('job Info');\n            }\n        );\n    }\n\n    submitExhaust() {\n        const exhaustData = {\n            request: {\n                dataset: this.filters.exhaustType,\n                tag: uuidv4(),\n                requestedBy: 'user_id',\n                requestedChannel: '01309282781705830427',\n                datasetConfig: {\n                    type: this.filters.exhaustType,\n                    conversationId: this.conversationId,\n                    startDate: '2022-02-06',\n                    endDate: '2022-02-10'\n                },\n                output_format: 'csv'\n            }\n        };\n        this.uciService.submitExhaust(exhaustData).subscribe(\n            data => {\n                console.log('job Info');\n            }\n        );\n    }\n\n\n}\n","import {PipesModule} from '../pipes/pipes.module';\nimport {UciService} from '../services/uci.service';\nimport {ConfigService} from '../services/config.service';\nimport {HttpClientModule} from '@angular/common/http';\nimport {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {SidePanelComponent} from './side-panel/side-panel.component';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {ConversationListComponent} from './conversation-list/conversation-list.component';\nimport {ConversationAddComponent} from './conversation-add/conversation-add.component';\nimport {UserSegmentListComponent} from './user-segment-list/user-segment-list.component';\nimport {UserSegmentAddComponent} from './user-segment-add/user-segment-add.component';\nimport {SuiModule} from 'ng2-semantic-ui-v9';\nimport {ConversationSuccessComponent} from './conversation-success/conversation-success.component';\nimport {UciGraphQlService} from '../services/uci-graph-ql.service';\nimport {TermsConditionsComponent} from './terms-conditions/terms-conditions.component';\nimport {TermsConditionConfirmComponent} from './terms-condition-confirm/terms-condition-confirm.component';\nimport {AddLogicComponent} from './add-logic/add-logic.component';\n//material-ui\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatPaginatorIntl, MatPaginatorModule} from '@angular/material/paginator';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatNativeDateModule} from '@angular/material/core';\nimport {LogicListComponent} from './logic-list/logic-list.component';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatStepperModule} from '@angular/material/stepper';\nimport {ConversationSetupComponent} from './conversation-setup/conversation-setup.component';\nimport {MatListModule} from '@angular/material/list';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {GlobalService} from '../services/global.service';\nimport {PaginatorIntl} from '../services/paginator-intl.service';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {ExhaustReportComponent} from './exhaust-report/exhaust-report.component';\n\n@NgModule({\n    declarations: [\n        SidePanelComponent,\n        ConversationListComponent,\n        ConversationAddComponent,\n        UserSegmentListComponent,\n        UserSegmentAddComponent,\n        TermsConditionsComponent,\n        TermsConditionConfirmComponent,\n        ConversationSuccessComponent,\n        AddLogicComponent,\n        LogicListComponent,\n        ConversationSetupComponent,\n        ExhaustReportComponent\n    ],\n    imports: [\n        CommonModule,\n        HttpClientModule,\n        FormsModule,\n        ReactiveFormsModule,\n        PipesModule,\n        SuiModule,\n        MatButtonModule,\n        MatInputModule,\n        MatGridListModule,\n        MatCheckboxModule,\n        MatDialogModule,\n        MatTableModule,\n        MatPaginatorModule,\n        MatIconModule,\n        MatMenuModule,\n        MatDatepickerModule,\n        MatNativeDateModule,\n        MatCardModule,\n        MatStepperModule,\n        MatListModule,\n        MatTooltipModule,\n        MatSelectModule,\n        MatFormFieldModule,\n    ],\n    exports: [\n        SidePanelComponent,\n    ],\n    providers: [\n        GlobalService,\n        UciService,\n        ConfigService,\n        UciGraphQlService,\n        MatDatepickerModule,\n        {\n            provide: MatPaginatorIntl, useClass: PaginatorIntl\n        }\n    ],\n    entryComponents: [\n        AddLogicComponent,\n        TermsConditionsComponent,\n        TermsConditionConfirmComponent\n    ],\n})\nexport class ComponentsModule {\n}\n","import {ActivatedRoute, Router} from '@angular/router';\nimport {Component, Input, OnInit} from '@angular/core';\nimport {Location} from '@angular/common';\nimport {UciEventsService} from '../../uci-events.service';\nimport {IdiscussionConfig} from '../../models/uci-config.model';\nimport {ConfigService} from '../../services/config.service';\nimport {UciService} from '../../services/uci.service';\nimport {TelemetryUtilsService} from '../../telemetry-utils.service';\nimport {UciData} from '../../models/uci.model';\nimport {GlobalService} from '../../services/global.service';\n\n@Component({\n    selector: 'lib-lib-entry',\n    templateUrl: './lib-entry.component.html',\n    styleUrls: ['./lib-entry.component.scss']\n})\nexport class LibEntryComponent implements OnInit {\n    @Input() user;\n    @Input() baseUrl;\n    @Input() nlBaseUrl;\n    @Input() blobUrl;\n    @Input() botPhoneNumber;\n    @Input() resourceService;\n    @Input() adapterId;\n    @Input() broadcastAdapterId;\n\n    constructor(\n        public activatedRoute: ActivatedRoute,\n        private uciService: UciService,\n        private configService: ConfigService,\n        private location: Location,\n        private uciEventsService: UciEventsService,\n        private telemetryUtils: TelemetryUtilsService,\n        private globalService: GlobalService,\n        private router: Router\n    ) {\n    }\n\n    ngOnInit(): void {\n        if (this.user) {\n            this.globalService.setUser(this.user);\n        }\n        if (this.baseUrl) {\n            this.globalService.setBaseUrl(this.baseUrl);\n        }\n        if (this.nlBaseUrl) {\n            this.globalService.setNlBaseUrl(this.nlBaseUrl);\n        }\n        if (this.blobUrl) {\n            this.globalService.setBlobUrl(this.blobUrl);\n        }\n        if (this.botPhoneNumber) {\n            this.globalService.setBotPhoneNumber(this.botPhoneNumber);\n        }\n        if (this.resourceService) {\n            this.globalService.setResourceService(this.resourceService);\n        }\n        if (this.adapterId) {\n            this.globalService.setAdapterId(this.adapterId);\n        }\n        if (this.broadcastAdapterId) {\n            this.globalService.setBroadcastAdapterId(this.broadcastAdapterId);\n        }\n        if (this.router.url === '/uci-admin') {\n            this.router.navigate(['uci-admin/home'], { skipLocationChange: true });\n        }\n    }\n\n    goBack(): void {\n        this.location.back();\n    }\n\n    close(event): void {\n        const eventAction = {\n            action: 'DF_CLOSE'\n        };\n        this.uciEventsService.emitTelemetry(eventAction);\n        this.telemetryUtils.logInteract(event, UciData.IPageName.LIB_ENTRY);\n    }\n}\n","import {LibEntryComponent} from '../components/lib-entry/lib-entry.component';\nimport {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {RouterModule, Routes} from '@angular/router';\nimport {ConversationListComponent} from '../components/conversation-list/conversation-list.component';\nimport {ConversationAddComponent} from '../components/conversation-add/conversation-add.component';\nimport {ConversationSuccessComponent} from '../components/conversation-success/conversation-success.component';\nimport {ExhaustReportComponent} from '../components/exhaust-report/exhaust-report.component';\n\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: LibEntryComponent,\n        children: [\n            {\n                path: 'home',\n                pathMatch: 'full',\n                component: ConversationListComponent\n            },\n            {\n                path: 'add',\n                pathMatch: 'full',\n                component: ConversationAddComponent,\n            },\n            {\n                path: ':id/edit',\n                pathMatch: 'full',\n                component: ConversationAddComponent,\n            },\n            {\n                path: 'success',\n                pathMatch: 'full',\n                component: ConversationSuccessComponent,\n            },\n            {\n                path: ':id/reports',\n                pathMatch: 'full',\n                component: ExhaustReportComponent,\n            },\n        ]\n    }\n];\n\n@NgModule({\n    declarations: [],\n    imports: [\n        RouterModule.forChild(routes),\n        CommonModule\n    ],\n    exports: [RouterModule]\n})\nexport class UciRoutingModule {\n}\n","import { NgModule } from '@angular/core';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatButtonModule} from '@angular/material/button';\nimport {ComponentsModule} from './components/components.module';\nimport {UciRoutingModule} from './uci-routing/uci-routing.module';\nimport {UciEventsService} from './uci-events.service';\nimport {ToasterService} from './services/toaster.service';\nimport {LibEntryComponent} from './components/lib-entry/lib-entry.component';\nimport {TelemetryUtilsService} from './telemetry-utils.service';\n\nexport function provideCsModule() {\n  return window['CsModule'];\n}\n\n@NgModule({\n  declarations: [\n    LibEntryComponent\n  ],\n  imports: [\n    ComponentsModule,\n    UciRoutingModule,\n    MatButtonModule,\n    MatIconModule\n  ],\n  exports: [\n    LibEntryComponent\n  ],\n  providers: [UciEventsService, TelemetryUtilsService, ToasterService, {provide: 'CsModule', useFactory: provideCsModule}]\n})\nexport class UciModule { }\n","/*\n * Public API Surface of uci-console\n */\n\nexport * from './lib/uci.module';\nexport * from './lib/uci-events.service';\nexport *  from './lib/models/uci-config.model';\nexport * from './lib/components/lib-entry/lib-entry.component';\nexport * from './lib/components/add-logic/add-logic.component';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {ComponentsModule as ɵf} from './lib/components/components.module';\nexport {ConversationAddComponent as ɵi} from './lib/components/conversation-add/conversation-add.component';\nexport {ConversationListComponent as ɵh} from './lib/components/conversation-list/conversation-list.component';\nexport {ConversationSetupComponent as ɵr} from './lib/components/conversation-setup/conversation-setup.component';\nexport {ConversationSuccessComponent as ɵp} from './lib/components/conversation-success/conversation-success.component';\nexport {ExhaustReportComponent as ɵs} from './lib/components/exhaust-report/exhaust-report.component';\nexport {LogicListComponent as ɵq} from './lib/components/logic-list/logic-list.component';\nexport {SidePanelComponent as ɵg} from './lib/components/side-panel/side-panel.component';\nexport {TermsConditionConfirmComponent as ɵo} from './lib/components/terms-condition-confirm/terms-condition-confirm.component';\nexport {TermsConditionsComponent as ɵn} from './lib/components/terms-conditions/terms-conditions.component';\nexport {UserSegmentAddComponent as ɵl} from './lib/components/user-segment-add/user-segment-add.component';\nexport {UserSegmentListComponent as ɵk} from './lib/components/user-segment-list/user-segment-list.component';\nexport {PipesModule as ɵt} from './lib/pipes/pipes.module';\nexport {BaseService as ɵb} from './lib/services/base.service';\nexport {ConfigService as ɵd} from './lib/services/config.service';\nexport {GlobalService as ɵc} from './lib/services/global.service';\nexport {PaginatorIntl as ɵu} from './lib/services/paginator-intl.service';\nexport {ToasterService as ɵj} from './lib/services/toaster.service';\nexport {UciGraphQlService as ɵm} from './lib/services/uci-graph-ql.service';\nexport {UciService as ɵa} from './lib/services/uci.service';\nexport {TelemetryUtilsService as ɵe} from './lib/telemetry-utils.service';\nexport {UciRoutingModule as ɵv} from './lib/uci-routing/uci-routing.module';"],"names":["_.get","_.isEmpty","_.last","_.find","_.isEqual","_.reject","uuidv4"],"mappings":"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"}