{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://@samagra-x/uci-console/lib/models/uci.model.ts","ng://@samagra-x/uci-console/lib/pipes/pipes.module.ts","ng://@samagra-x/uci-console/lib/services/global.service.ts","ng://@samagra-x/uci-console/lib/services/base.service.ts","ng://@samagra-x/uci-console/lib/services/uci.service.ts","ng://@samagra-x/uci-console/lib/services/config.service.ts","ng://@samagra-x/uci-console/lib/uci-events.service.ts","ng://@samagra-x/uci-console/lib/telemetry-utils.service.ts","ng://@samagra-x/uci-console/lib/components/side-panel/side-panel.component.ts","ng://@samagra-x/uci-console/lib/utils/helper.ts","ng://@samagra-x/uci-console/lib/components/conversation-list/conversation-list.component.ts","ng://@samagra-x/uci-console/lib/services/toaster.service.ts","ng://@samagra-x/uci-console/lib/components/terms-conditions/terms-conditions.component.ts","ng://@samagra-x/uci-console/lib/components/terms-condition-confirm/terms-condition-confirm.component.ts","ng://@samagra-x/uci-console/lib/components/conversation-add/conversation-add.component.ts","ng://@samagra-x/uci-console/lib/components/user-segment-list/user-segment-list.component.ts","ng://@samagra-x/uci-console/lib/services/uci-graph-ql.service.ts","ng://@samagra-x/uci-console/lib/components/user-segment-add/user-segment-add.component.ts","ng://@samagra-x/uci-console/lib/components/conversation-success/conversation-success.component.ts","ng://@samagra-x/uci-console/lib/components/add-logic/add-logic.component.ts","ng://@samagra-x/uci-console/lib/components/logic-list/logic-list.component.ts","ng://@samagra-x/uci-console/lib/components/conversation-setup/conversation-setup.component.ts","ng://@samagra-x/uci-console/lib/services/paginator-intl.service.ts","ng://@samagra-x/uci-console/lib/components/exhaust-report/exhaust-report.component.ts","ng://@samagra-x/uci-console/lib/components/components.module.ts","ng://@samagra-x/uci-console/lib/components/lib-entry/lib-entry.component.ts","ng://@samagra-x/uci-console/lib/uci-routing/uci-routing.module.ts","ng://@samagra-x/uci-console/lib/uci.module.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__param","paramIndex","decorator","__values","o","Symbol","iterator","m","next","value","done","TypeError","UciData","PipesModule","NgModule","declarations","imports","CommonModule","exports","GlobalService","user","BehaviorSubject","undefined","user$","asObservable","baseUrl","nlBaseUrl","blobUrl","botPhoneNumber","resourceService","broadcastAdapterId","adapterId","baseUrl$","nlBaseUrl$","resourceService$","setUser","getUser","setBaseUrl","getBaseUrl","setNlBaseUrl","getNlBaseUrl","setBlobUrl","getBlobUrl","setBotPhoneNumber","phoneNumber","getBotPhoneNumber","setResourceService","getResourceService","setBroadcastAdapterId","getBroadcastAdapterId","setAdapterId","getAdapterId","Injectable","providedIn","BaseService","http","globalService","getDefaultHeaders","headers","id","ownerID","rootOrgId","ownerOrgID","token","getRequest","url","params","_this","get","pipe","map","res","result","catchError","err","handleError","postRequest","data","post","postSegmentRequest","patchRequest","patch","deleteRequest","delete","error","ErrorEvent","throwError","message","console","log","toFormData","formValue","formData","FormData","_b","keys","_c","append","HttpClient","UciService","_super","FORM_BASE_URL","subscribe","BASE_URL","BASE_URL_V1","BASE_URL_V2","DATASET_URL","replace","NL_BASE_URL","fetchConversation","asset","searchConversation","pauseConversation","botId","startConversation","deleteConversation","getBotDetails","getCheckStartingMessage","param","botCreate","botUpdate","fetchUserSegment","searchUserSegment","createUserSegment","userSegmentQueryBuilder","createLogic","updateLogic","deleteLogic","uploadFile","obj","readForm","getJobList","getJobInfo","submitExhaust","nlSegmentBotMapping","submitSegmentData","ConfigService","activatedRoute","ngOnInit","setConfig","config","_config","setConfigFromParams","queryParams","userName","_.get","categories","JSON","parse","getConfig","getCategories","getParams","hasContext","hasContextData","getContext","getContextData","getRouterSlug","routerSlug","ActivatedRoute","IPageName","UciEventsService","telemetryEvent","Subject","actionEvent","EventEmitter","emitTelemetry","event","_.isEmpty","TelemetryUtilsService","discussionEvents","router","_context","currentObj","setContext","context","_.last","uppendContext","matchedC","_.find","_.isEqual","push","deleteContext","prevTopic","topic","_.reject","logImpression","pageId","impressionEvent","eid","edata","type","pageid","uri","cdata","toString","logInteract","interactEvent","object","ver","getRollUp","rollUp","forEach","element","index","Router","SidePanelComponent","uciService","telemetryUtils","configService","defaultPage","menu","showSideMenu","hideSidePanel","document","body","classList","contains","HOME","setMenu","languageSelected$","lang","route","label","_a","frmelmnts","lbl","conversations","enable","isActive","selectedItem","indexOf","selectedTab","navigate","pageName","closeNav","ngOnDestroy","paramsSubscription","unsubscribe","showMenuButton","Component","selector","template","Helper","copyData","val","getElementById","innerText","selBox","createElement","style","position","left","top","opacity","appendChild","focus","select","execCommand","removeChild","makBotUrl","startingMessage","encodeURI","ConversationListComponent","chatBots","displayedColumns","pager","pageSizeOptions","currentPage","totalItems","pageSize","column","sortDirection","reverse","getAllChatBots","page","perPage","search","name","parseConversations","bot","segmentText","userCount","status","join","totalCount","sortColumns","navigateToPage","pageEvent","pageIndex","getSearch","onAddNew","navigateByUrl","onEdit","conversation","onStatusChange","updateDatasource","onDelete","splice","onCopy","botTable","renderRows","onReport","ViewChild","ToasterService","iziToast","settings","titleSize","success","title","class","info","warning","custom","show","TermsConditionsComponent","dialogRef","onCancel","close","MatDialogRef","Inject","args","MAT_DIALOG_DATA","TermsConditionConfirmComponent","isLoaderShow","isSubmit","Appropriateness","contentDetails","usability","breakpoint","window","innerWidth","text","appropriatenessHate","checks","_d","appropriatenessAbusive","_f","_e","appropriatenessDiscrimination","_h","_g","appropriatenessChild","_k","_j","contentDetailDescription","_m","_l","contentDetailCorrect","_p","_o","contentDetailAppropriate","_r","_q","contentDetailRelevant","_t","_s","usabilityContent","_v","_u","usabilityClear","_x","_w","usabilityAudio","_z","_y","usabilityNoMistakes","_1","_0","usabilitySimple","updateAllChecked","allChecked","allCheck","isAllCheck","onSubmit","onResize","ConversationAddComponent","fb","toasterService","dialog","currentViewState","stepIndex","botLogics","broadcastBotLogics","userSegments","collectionListModal","isModalLoaderShow","logicFormRequest","isCheckedTermCondition","termsAndConditionModal","verifyAllItemsModal","startMinDate","Date","moment","subtract","format","isStartingMessageExist","isStartingMessageAvailable","endMinDate","add","conversationForm","group","Validators","required","description","purpose","startDate","endDate","segmentId","conversationId","snapshot","paramMap","userSegment","onUserSegmentCancel","onUserSegmentAddClick","onUserSegmentAdd","segments","onUserSegmentCreate","segment","onUserSegmentDelete","nextStep","valid","horizontalStepper","verticalStepper","backToStepOne","previous","onAddCancel","isTriggerBot","isNavigateToEnd","reqObj","getRawValue","users","logic","closeVerifyModal","afterBotSubmit","conversationBot","createSegment","extras","mappingData","parseInt","segData","all","cadence","retries","timeout","concurrent","pagination","concurrency","retries-interval","pageParam","credentials","totalRecords","byID","byPhone","createBroadcastBotLogic","botLogic","adapter","this_1","transformers","meta","existingLogic","afterBroadcastBotLogic","verifyAllModal","deny","openTermAndConditionModel","open","afterClosed","openItemsVerifyModal","isSubmitBtn","patchValue","minDate","isBefore","onStarringMessageChange","validateStartingMessage","control","valueChanges","debounceTime","distinctUntilChanged","switchMap","match","alreadyExist","onBotLogicModify","logics","FormBuilder","MatDialog","UserSegmentListComponent","cancel","selectedUserSegments","selectedUserSegmentMap","totalPages","startPage","endPage","startIndex","endIndex","pages","pageNumber","selectedUserSegment","getUserSegment","parseUserSegments","total","Math","ceil","emit","onCheck","checked","onAdd","values","Output","Input","UciGraphQlService","getState","baseRequest","query","getDistrict","variables","getBlock","getSchoolDetails","getClusters","getRole","getBoards","UserSegmentAddComponent","uciGraphQlService","districts","blocks","schools","clusters","roles","boards","grade","subjects","state","getUciDistrict","getUciRole","getUciBoard","userSegmentForm","district","block","cluster","school","role","board","subject","item","getUciBlock","getUciCluster","getUciSchoolDetails","invalid","locationData","blockData","districtData","userLocation","userType","framework","gradeLevel","response","items","afterAdd","inserted","getUciState","organisation","formVal","ConversationSuccessComponent","onClose","AddLogicComponent","odkFileAlreadyExist","initialize","logicForm","formId","formID","onLogicAdd","onFileUpload","files","form","fileInfo","fileErrorStatus","manualDownload","sampleODKDownload","LogicListComponent","notificationBotLogics","modify","datasource","MatTableDataSource","openModel","selectedLogicIndex","width","logicFormData","reqData","templateType","onModify","file","ConversationSetupComponent","starringMessageChange","userSegmentDelete","matDateBreakpoint","tempDate","PaginatorIntl","getRangeLabel","of","max","min","getPaginatorIntl","itemsPerPageLabel","nextPageLabel","previousPageLabel","firstPageLabel","lastPageLabel","changes","MatPaginatorIntl","ExhaustReportComponent","exhaustTypes","filters","exhaustType","dataSource","requestid","requesttype","requestdate","conversationid","startdate","enddate","reportlink","generateddate","filterForm","exhaustData","request","dataset","tag","uuidv4","requestedBy","requestedChannel","datasetConfig","output_format","ComponentsModule","HttpClientModule","FormsModule","ReactiveFormsModule","SuiModule","MatButtonModule","MatInputModule","MatGridListModule","MatCheckboxModule","MatDialogModule","MatTableModule","MatPaginatorModule","MatIconModule","MatMenuModule","MatDatepickerModule","MatNativeDateModule","MatCardModule","MatStepperModule","MatListModule","MatTooltipModule","MatSelectModule","MatFormFieldModule","providers","provide","useClass","entryComponents","LibEntryComponent","location","uciEventsService","skipLocationChange","goBack","back","action","LIB_ENTRY","Location","routes","path","component","children","pathMatch","UciRoutingModule","RouterModule","forChild","provideCsModule","UciModule","useFactory"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","export namespace UciData {\n\n  export interface IUser {\n    uid: number\n    username: string\n    fullname?: string\n    userslug: string\n    reputation: number\n    postcount: number\n    topiccount?: number\n    picture?: string | null\n    signature?: string | null\n    banned: number\n    'banned:expire'?: number\n    status: string\n    lastonline?: number | null | undefined\n    groupTitle?: string\n    groupTitleArray?: string[]\n    'icon:text'?: string\n    'icon:bgColor'?: string\n    lastonlineISO?: string\n    banned_until?: number | boolean\n    banned_until_readable?: string\n    selectedGroups?: any[]\n    custom_profile_info?: any[]\n  }\n  \n  export interface IProfile {\n    uid: number\n    username: string\n    userslug: string\n    email: string\n    'email:confirmed': number\n    joindate: number\n    lastonline: number\n    picture: string\n    fullname: string\n    location: string\n    birthday: string\n    website: string\n    aboutme: string\n    signature: string\n    uploadedpicture: string\n    profileviews: number\n    reputation: number\n    postcount: number\n    topiccount: number\n    lastposttime: number\n    banned: number\n    'banned:expire': number\n    status: string\n    flags: number\n    followerCount: number\n    followingCount: number\n    'cover:url': string\n    'cover:position': string\n    groupTitle: string\n    groupTitleArray: []\n    joindateISO: string\n    lastonlineISO: string\n    isBlocked: true\n    blocksCount: number\n    canEdit: true\n    canBan: true\n    title: string\n  }\n\n  export enum IPageName {\n    HOME = 'uci-admin',\n    LIB_ENTRY = 'lib-entry'\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule\n  ],\n  exports: []\n})\nexport class PipesModule { }\n","import {Injectable} from '@angular/core';\nimport {BehaviorSubject} from 'rxjs';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class GlobalService {\n    private user: BehaviorSubject<any> = new BehaviorSubject(undefined);\n    public readonly user$ = this.user.asObservable();\n    private baseUrl: BehaviorSubject<any> = new BehaviorSubject(undefined);\n    private nlBaseUrl: BehaviorSubject<any> = new BehaviorSubject(undefined);\n    private blobUrl: BehaviorSubject<any> = new BehaviorSubject(undefined);\n    private botPhoneNumber: BehaviorSubject<any> = new BehaviorSubject('');\n    private resourceService: BehaviorSubject<any> = new BehaviorSubject({});\n    private broadcastAdapterId: BehaviorSubject<any> = new BehaviorSubject('');\n    private adapterId: BehaviorSubject<any> = new BehaviorSubject('');\n    public readonly baseUrl$ = this.baseUrl.asObservable();\n    public readonly nlBaseUrl$ = this.nlBaseUrl.asObservable();\n    public readonly resourceService$ = this.resourceService.asObservable();\n\n    constructor() {\n    }\n\n    setUser(user) {\n        this.user.next(user);\n    }\n\n    getUser() {\n        return this.user.value;\n    }\n\n    setBaseUrl(baseUrl) {\n        this.baseUrl.next(baseUrl);\n    }\n\n    getBaseUrl() {\n        return this.baseUrl.value;\n    }\n\n    setNlBaseUrl(baseUrl) {\n        this.nlBaseUrl.next(baseUrl);\n    }\n\n    getNlBaseUrl() {\n        return this.nlBaseUrl.value;\n    }\n\n    setBlobUrl(baseUrl) {\n        this.blobUrl.next(baseUrl);\n    }\n\n    getBlobUrl() {\n        return this.blobUrl.value;\n    }\n\n    setBotPhoneNumber(phoneNumber) {\n        this.botPhoneNumber.next(phoneNumber);\n    }\n\n    getBotPhoneNumber() {\n        return this.botPhoneNumber.value;\n    }\n\n    setResourceService(resourceService) {\n        this.resourceService.next(resourceService);\n    }\n\n    getResourceService() {\n        return this.resourceService.value;\n    }\n\n    setBroadcastAdapterId(broadcastAdapterId) {\n        this.broadcastAdapterId.next(broadcastAdapterId);\n    }\n\n    getBroadcastAdapterId() {\n        return this.broadcastAdapterId.value;\n    }\n\n    setAdapterId(broadcastAdapterId) {\n        this.adapterId.next(broadcastAdapterId);\n    }\n\n    getAdapterId() {\n        return this.adapterId.value;\n    }\n}\n","import {HttpClient, HttpErrorResponse} from '@angular/common/http';\nimport {catchError, map} from 'rxjs/operators';\n\nimport {GlobalService} from './global.service';\nimport {Injectable} from '@angular/core';\nimport {throwError} from 'rxjs';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class BaseService {\n    constructor(public http: HttpClient, public globalService: GlobalService) {\n    }\n\n    private getDefaultHeaders() {\n        const headers: any = {};\n        const user = this.globalService.getUser();\n        if (user && user.id) {\n            headers.ownerID = user.id;\n        }\n        if (user && user.rootOrgId) {\n            headers.ownerOrgID = user.rootOrgId;\n        }\n        if (user.token) {\n          headers['admin-token'] = user.token;\n        }\n\n        return headers;\n    }\n\n    public getRequest(url, params: any = {}, headers: any = {}) {\n        headers = {\n            ...headers,\n            ...this.getDefaultHeaders()\n        };\n\n        return this.http.get(url, {params, headers}).pipe(\n            map((res: any) => {\n                return res.result;\n            }),\n            catchError(err => {\n                return this.handleError(err);\n            })\n        );\n    }\n\n    public postRequest(url, data = {}, headers: any = {}) {\n        headers = {\n            ...headers,\n            ...this.getDefaultHeaders()\n        };\n\n        return this.http.post(url, data, {headers}).pipe(\n            map((res: any) => {\n                return res.result;\n            }),\n            catchError(err => {\n                return this.handleError(err);\n            })\n        );\n    }\n\n    public postSegmentRequest(url, data = {}, headers: any = {}) {\n        headers = {\n            ...headers,\n            ...this.getDefaultHeaders()\n        };\n\n        return this.http.post(url, data, {headers}).pipe(\n            map((res: any) => {\n                return res.result ? res.result : res;\n            }),\n            catchError(err => {\n                return this.handleError(err);\n            })\n        );\n    }\n\n    public patchRequest(url, data = {}, headers: any = {}) {\n        headers = {\n            ...headers,\n            ...this.getDefaultHeaders()\n        };\n\n        return this.http.patch(url, data, {headers}).pipe(\n            map((res: any) => {\n                return res.result;\n            }),\n            catchError(err => {\n                return this.handleError(err);\n            })\n        );\n    }\n\n    public deleteRequest(url, headers: any = {}) {\n        headers = {\n            ...headers,\n            ...this.getDefaultHeaders()\n        };\n\n        return this.http.delete(url, {headers}).pipe(\n            map((res: any) => {\n                return res.result;\n            }),\n            catchError(err => {\n                return this.handleError(err);\n            })\n        );\n    }\n\n\n    public handleError(error: HttpErrorResponse) {\n        if (error instanceof ErrorEvent) {\n            return throwError(error.error.message);\n        }\n        console.log('=====', error, error.error);\n        // this.toasterService.error(this.resourceService.messages.fmsg.m0091);\n        return throwError(error.error);\n    }\n\n    public toFormData<T>(formValue: T) {\n        const formData = new FormData();\n\n        for (const key of Object.keys(formValue)) {\n            const value = formValue[key];\n            formData.append(key, value);\n        }\n\n        return formData;\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {BaseService} from './base.service';\nimport {Observable} from 'rxjs';\nimport {GlobalService} from './global.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class UciService extends BaseService {\n    BASE_URL;\n    BASE_URL_V1;\n    BASE_URL_V2;\n\n    NL_BASE_URL;\n    DATASET_URL;\n    FORM_BASE_URL = 'https://dev.sunbirded.org/';\n\n    constructor(public http: HttpClient, public globalService: GlobalService) {\n        super(http, globalService);\n        this.globalService.baseUrl$.subscribe(value => {\n            if (value) {\n                this.BASE_URL = value + '/admin/';\n                this.BASE_URL_V1 = value + '/admin/v1/';\n                this.BASE_URL_V2 = value + '/admin/v2/';\n\n                this.DATASET_URL = value.replace('/uci') + '/dataset/v1/';\n            }\n        });\n        this.globalService.nlBaseUrl$.subscribe(value => {\n            if (value) {\n                this.NL_BASE_URL = value + '/';\n            }\n        });\n    }\n\n    fetchConversation(params): Observable<any> {\n        return this.getRequest(this.BASE_URL + 'bot/search', params, {asset: 'bot'});\n    }\n\n    searchConversation(params): Observable<any> {\n        return this.getRequest(this.BASE_URL + 'bot/search', params, {asset: 'bot'});\n    }\n\n    pauseConversation(botId): Observable<any> {\n        return this.getRequest(this.BASE_URL + `bot/pause/${botId}`, {}, {asset: 'bot'});\n    }\n\n    startConversation(botId): Observable<any> {\n        return this.getRequest(this.BASE_URL + `bot/start/${botId}`, {}, {asset: 'bot'});\n    }\n\n    deleteConversation(botId): Observable<any> {\n        return this.getRequest(this.BASE_URL + `bot/delete/${botId}`, {}, {asset: 'bot'});\n    }\n\n    getBotDetails(id) {\n        return this.getRequest(this.BASE_URL + `bot/get/${id}`, {}, {asset: 'bot'});\n    }\n\n    getCheckStartingMessage(param) {\n        return this.getRequest(this.BASE_URL + `bot/getByParam`, param, {asset: 'bot'});\n    }\n\n    botCreate(data) {\n        return this.postRequest(this.BASE_URL + 'bot', data, {asset: 'bot'});\n    }\n\n    botUpdate(id, data) {\n        return this.postRequest(this.BASE_URL + `bot/update/${id}`, data, {asset: 'bot'});\n    }\n\n    // User Segment APIs\n    fetchUserSegment(params): Observable<any> {\n        return this.getRequest(this.BASE_URL + 'userSegment/get', params, {asset: 'userSegment'});\n    }\n\n    searchUserSegment(params): Observable<any> {\n        return this.getRequest(this.BASE_URL + 'userSegment/search', params, {asset: 'userSegment'});\n    }\n\n    createUserSegment(data) {\n        return this.postSegmentRequest(this.BASE_URL + 'user-segment', data, {asset: 'userSegment'});\n    }\n\n    userSegmentQueryBuilder(data) {\n        return this.postRequest(this.BASE_URL + 'userSegment/queryBuilder', data, {asset: 'userSegment'});\n    }\n\n    // Conversation APIs\n    createLogic(data) {\n        return this.postRequest(this.BASE_URL + 'conversationLogic', data, {asset: 'conversationLogic'});\n    }\n\n    updateLogic(id, data) {\n        return this.patchRequest(this.BASE_URL + `conversationLogic/${id}`, data, {asset: 'conversationLogic'});\n    }\n\n    deleteLogic(id) {\n        return this.deleteRequest(this.BASE_URL + `conversationLogic/${id}`, {asset: 'conversationLogic'});\n    }\n\n    // Mis APIs\n    uploadFile(obj): Observable<any> {\n        return this.postRequest(this.BASE_URL + 'form/upload', this.toFormData(obj));\n    }\n\n    readForm(data) {\n        return this.postRequest(this.FORM_BASE_URL + 'api/data/v1/form/read', data);\n    }\n\n    // Exhaust API\n    getJobList(id, params) {\n        return this.getRequest(this.DATASET_URL + `request/list/${id}`, params, {asset: 'conversationLogic'});\n    }\n\n    getJobInfo(id, params) {\n        return this.getRequest(this.DATASET_URL + `request/read/${id}`, params, {asset: 'conversationLogic'});\n    }\n\n    submitExhaust(data) {\n        return this.postRequest(this.DATASET_URL + `request/submit`, data, {asset: 'conversationLogic'});\n    }\n\n    nlSegmentBotMapping(data) {\n        return this.postRequest(this.NL_BASE_URL + `segment-bot-mapping`, data);\n    }\n\n    submitSegmentData(data) {\n        return this.postRequest(this.NL_BASE_URL + `segment-bot-mapping`, data);\n    }\n}\n","import { UciService } from './uci.service';\nimport { Injectable, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport * as _ from 'lodash'\nimport { IdiscussionConfig } from '../models/uci-config.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConfigService implements OnInit {\n\n  paramsSubscription: Subscription;\n  private _config: IdiscussionConfig;\n  public checkContext: boolean;\n  public queryParams;\n  getContextData: any;\n  hasContextData: any;\n  getParams: IdiscussionConfig;\n\n\n  constructor(\n    public activatedRoute: ActivatedRoute,\n    private UciService: UciService,\n  ) { }\n\n  ngOnInit() {\n\n  }\n\n  setConfig(activatedRoute) {\n    activatedRoute.data.subscribe((config) => {\n      this._config = config.data;\n    });\n  }\n\n  setConfigFromParams(activatedRoute) {\n    activatedRoute.queryParams.subscribe((params) => {\n      const obj: IdiscussionConfig = {\n        userName : _.get(params, 'userName'),\n        categories : JSON.parse(_.get(params, 'categories'))\n      };\n      this._config = obj;\n    });\n  }\n\n  public getConfig() {\n    return this._config;\n  }\n\n  public getCategories() {\n    this.getParams = this.getConfig()\n    return _.get(this.getParams, 'categories')\n  }\n\n  public hasContext() {\n    this.hasContextData = this.getCategories() ?\n      (this.getCategories().result ? this.getCategories().result.length : null)\n      : null\n    return this.hasContextData\n  }\n\n  public getContext() {\n    this.getContextData = this.getCategories() ?\n      (this.getCategories().result ? this.getCategories().result : null)\n      : null\n    return this.getContextData\n  }\n\n  public getRouterSlug() {\n    return this._config.routerSlug ? this._config.routerSlug : '';\n  }\n}\n","import { Injectable, EventEmitter } from '@angular/core';\nimport { Subject } from 'rxjs';\n/* tslint:disable */\nimport * as _ from 'lodash'\n/* tslint:enable */\n@Injectable({\n  providedIn: 'root'\n})\nexport class UciEventsService {\n\n  public telemetryEvent = new Subject<any>();\n  public actionEvent = new EventEmitter<any>();\n\n  constructor() { }\n\n  emitTelemetry(event) {\n    // console.log('Lib Event', event);\n    if (!_.isEmpty(event)) {\n      this.telemetryEvent.next(event);\n    }\n  }\n}\n","\nimport { UciEventsService } from './uci-events.service';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\n/* tslint:disable */\nimport * as _ from 'lodash'\n/* tslint:enable */\ninterface ITelemetryObj {\n  eid: string,\n  edata: {},\n  context?: {}\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TelemetryUtilsService {\n\n  _context = []\n  currentObj = {};\n\n  constructor(\n    private discussionEvents: UciEventsService,\n    private router: Router\n  ) { }\n\n  setContext(context) {\n    this._context = context;\n    this.currentObj = _.last(context);\n  }\n\n  uppendContext(data) {\n    const matchedC = _.find(this._context, { id: data.id });\n    if (!_.isEmpty(data) && !_.isEqual(data, matchedC)) {\n      this._context.push(data);\n    }\n    this.currentObj = _.last(this._context);\n  }\n\n  deleteContext(prevTopic) {\n    const topic = _.find(this._context, prevTopic);\n    if (topic) {\n      this._context = _.reject(this._context, topic);\n    }\n  }\n\n  getContext() {\n    return this._context;\n  }\n\n  logImpression(pageId) {\n    this.discussionEvents.emitTelemetry({});\n    const impressionEvent: ITelemetryObj = {\n      eid: 'IMPRESSION',\n      edata: {\n        type: 'view',\n        pageid: pageId,\n        uri: this.router.url\n      }\n    }\n    if (this.currentObj) {\n      impressionEvent.context = { cdata: [{\n        id: _.get(this.currentObj, 'id').toString(),\n        type: _.get(this.currentObj, 'type') }\n      ]};\n    }\n    this.discussionEvents.emitTelemetry(impressionEvent);\n  }\n\n  logInteract(event, pageId) {\n    const target = _.get(event, 'currentTarget.attributes.id') ||  _.get(event, 'target.attributes.id') ||\n     _.get(event, 'srcElement.attributes.id');\n    const interactEvent: ITelemetryObj = {\n      eid: 'INTERACT',\n      edata: {\n        id: _.get(target, 'value') || _.get(event, 'action'),\n        type: 'CLICK',\n        pageid: pageId\n      }\n    };\n\n    if (this.currentObj) {\n      const object = {\n        id: _.get(this.currentObj, 'id').toString(),\n        type: _.get(this.currentObj, 'type'),\n        ver: '1'\n      };\n      object['rollup'] = this._context.length > 1 ?  this.getRollUp() : {};\n      interactEvent.context = {\n        cdata: [{\n          id: _.get(this.currentObj, 'id').toString(),\n          type: _.get(this.currentObj, 'type')\n        }], object\n      };\n    }\n\n    this.discussionEvents.emitTelemetry(interactEvent);\n  }\n\n  getRollUp() {\n\n      const rollUp = {};\n      const data = _.reject(this._context, this.currentObj);\n\n      if (this._context.length > 1) {\n        data.forEach((element, index) => {\n          // console.log('rollup', element);\n          rollUp['l' + (index + 1)] = element.toString();\n        });\n      }\n\n      if (_.get(this.currentObj, 'type') !== 'Post') {\n        return rollUp;\n      }\n\n      return {};\n\n  }\n\n}\n","import {UciData} from '../../models/uci.model';\nimport {TelemetryUtilsService} from '../../telemetry-utils.service';\nimport {UciService} from '../../services/uci.service';\nimport {Component, OnDestroy, OnInit} from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {Subscription} from 'rxjs';\n/* tslint:disable */\nimport {ConfigService} from '../../services/config.service';\nimport {IdiscussionConfig, IMenuOptions} from '../../models/uci-config.model';\nimport {GlobalService} from '../../services/global.service';\n\n/* tslint:enable */\n\n@Component({\n    selector: 'lib-side-panel',\n    templateUrl: './side-panel.component.html',\n    styleUrls: ['./side-panel.component.scss']\n})\nexport class SidePanelComponent implements OnInit, OnDestroy {\n\n    paramsSubscription: Subscription;\n\n    userName: string;\n\n    defaultPage = 'categories';\n\n    data: IdiscussionConfig;\n    hideSidePanel: boolean;\n    menu: Array<IMenuOptions> = [];\n    selectedTab: string;\n    showSideMenu: Boolean = true;\n    resourceService;\n\n    constructor(\n        public router: Router,\n        public uciService: UciService,\n        public activatedRoute: ActivatedRoute,\n        private telemetryUtils: TelemetryUtilsService,\n        private configService: ConfigService,\n        private globalService: GlobalService\n    ) {\n    }\n\n    ngOnInit() {\n        this.resourceService = this.globalService.getResourceService();\n        // TODO: loader or spinner\n        this.telemetryUtils.setContext([]);\n        this.hideSidePanel = document.body.classList.contains('widget');\n        this.telemetryUtils.logImpression(UciData.IPageName.HOME);\n        this.setMenu();\n        if (this.globalService.getResourceService() && this.globalService.getResourceService().languageSelected$) {\n            this.globalService.getResourceService().languageSelected$.subscribe(\n                lang => {\n                    this.menu = [];\n                    this.setMenu();\n                }\n            );\n        }\n    }\n\n    setMenu() {\n        this.menu = [\n            {\n                route: '',\n                label: this.resourceService.frmelmnts?.lbl?.conversations,\n                enable: true\n            }\n        ];\n    }\n\n    isActive(selectedItem) {\n        if (this.router.url.indexOf(`/${selectedItem}`) > -1 || this.selectedTab === selectedItem) {\n            if (!this.selectedTab) {\n                this.selectedTab = selectedItem;\n            }\n            return true;\n        } else if (selectedItem === 'categories' && !this.selectedTab) {\n            return true;\n        }\n        return false;\n    }\n\n    navigate(pageName: string, event?) {\n        this.selectedTab = pageName;\n        this.telemetryUtils.setContext([]);\n        if (event) {\n            this.telemetryUtils.logInteract(event, UciData.IPageName.HOME);\n        }\n        this.router.navigate([`uci-admin`]);\n        this.closeNav();\n    }\n\n    ngOnDestroy() {\n        if (this.paramsSubscription) {\n            this.paramsSubscription.unsubscribe();\n        }\n    }\n\n    showMenuButton() {\n        this.showSideMenu = !this.showSideMenu;\n    }\n\n    closeNav() {\n        this.showSideMenu = !this.showSideMenu;\n    }\n\n}\n","import {Injectable} from '@angular/core';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class Helper {\n    static copyData(id) {\n        const val = document.getElementById(id).innerText;\n        const selBox = document.createElement('textarea');\n        selBox.style.position = 'fixed';\n        selBox.style.left = '0';\n        selBox.style.top = '0';\n        selBox.style.opacity = '0';\n        selBox.value = val;\n        document.body.appendChild(selBox);\n        selBox.focus();\n        selBox.select();\n        document.execCommand('copy');\n        document.body.removeChild(selBox);\n    }\n\n    static makBotUrl(startingMessage, phoneNumber) {\n        return encodeURI('https://api.whatsapp.com/send?text=' + startingMessage + '&phone=' + phoneNumber);\n    }\n}\n","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {UciService} from '../../services/uci.service';\nimport {Router} from '@angular/router';\nimport {GlobalService} from '../../services/global.service';\nimport {Helper} from '../../utils/helper';\nimport {MatTable} from '@angular/material/table';\n\n@Component({\n    selector: 'lib-conversation-list',\n    templateUrl: './conversation-list.component.html',\n    styleUrls: ['./conversation-list.component.scss']\n})\nexport class ConversationListComponent implements OnInit {\n    @ViewChild('botTable') botTable: MatTable<any>;\n    chatBots = [];\n    displayedColumns: string[] = ['name', 'status', 'description', 'startingMessage', 'botUrl', 'botId', 'action'];\n    pager = {\n        pageSizeOptions: [5, 10, 25, 30],\n        currentPage: 1,\n        totalItems: 0,\n        pageSize: 10\n    };\n    column = '';\n    sortDirection = '';\n    reverse = false;\n    queryParams: any;\n    search;\n    user;\n    resourceService;\n\n    constructor(\n        private uciService: UciService,\n        private router: Router,\n        private globalService: GlobalService,\n    ) {\n    }\n\n    ngOnInit() {\n        this.user = this.globalService.getUser();\n        if (!this.user) {\n            this.router.navigate(['uci-admin']);\n            return;\n        }\n        this.resourceService = this.globalService.getResourceService();\n        this.getAllChatBots();\n    }\n\n    getAllChatBots() {\n        const param: any = {\n            page: this.pager.currentPage,\n            perPage: this.pager.pageSize\n        };\n\n        if (this.search) {\n            param.name = this.search;\n        }\n        this.uciService.searchConversation(param).subscribe(\n          data => this.parseConversations(data)\n        );\n\n    }\n\n    parseConversations(data) {\n        this.chatBots = [];\n        data.data.forEach(bot => {\n            const obj = {...bot, segmentText: '', userCount: 0, status: bot.status || 'Draft'};\n            obj.status = bot.status === 'enabled' ? 'Live' : bot.status === 'disabled' ? 'Disabled' : 'Draft';\n            const segmentNames = [];\n            // bot.userSegments.forEach(userSegment => {\n            //     segmentNames.push(userSegment.name);\n            //     obj.userCount += (userSegment.count || 0);\n            // });\n            obj.segmentText = segmentNames.join(', ');\n\n            obj.url = Helper.makBotUrl(bot.startingMessage || '', this.globalService.getBotPhoneNumber());\n            obj.botId = bot.id || '';\n\n            this.chatBots.push(obj);\n        });\n        this.pager.totalItems = data.totalCount;\n    }\n\n    sortColumns(column) {\n        this.column = column;\n        this.sortDirection = this.sortDirection === 'asc' ? 'desc' : 'asc';\n        this.reverse = !this.reverse;\n    }\n\n    navigateToPage(pageEvent): void {\n        this.pager.currentPage = pageEvent.pageIndex + 1;\n        this.getAllChatBots();\n    }\n\n    getSearch() {\n        this.pager.currentPage = 1;\n        this.getAllChatBots();\n    }\n\n    onAddNew() {\n        this.router.navigateByUrl('uci-admin/add');\n    }\n\n    onEdit(conversation) {\n        this.router.navigateByUrl(`uci-admin/${conversation.id}/edit`);\n    }\n\n    onStatusChange(conversation, index) {\n        if (conversation.status === 'Live') {\n            this.uciService.pauseConversation(conversation.id).subscribe(\n                data => {\n                    this.chatBots[index].status = 'Disabled';\n                    this.updateDatasource();\n                }\n            );\n        } else {\n            this.uciService.startConversation(conversation.id).subscribe(\n                data => {\n                    this.chatBots[index].status = 'Live';\n                    this.updateDatasource();\n                }\n            );\n        }\n    }\n\n    onDelete(conversation, index) {\n        this.uciService.deleteConversation(conversation.id).subscribe(\n            data => {\n                this.chatBots.splice(index, 1);\n                this.updateDatasource();\n            }\n        );\n    }\n\n    onCopy(id) {\n        Helper.copyData(id);\n    }\n\n    updateDatasource() {\n        this.botTable.renderRows();\n    }\n\n    onReport(conversation, i): void {\n        this.router.navigateByUrl(`uci-admin/${conversation.id}/reports`);\n    }\n}\n","import { Injectable } from '@angular/core';\ndeclare const iziToast: any;\n/**\n * Service to show toaster\n *\n */\n@Injectable()\nexport class ToasterService {\n\n  /**\n   * To show toaster messages\n   */\n  public iziToast: any;\n\n  /**\n\t * Constructor to create injected service(s) object\n\t */\n  constructor() {\n    this.iziToast = iziToast; // global object\n    this.iziToast.settings({\n      position: 'topCenter',\n      titleSize: '18'\n    });\n  }\n\n  /**\n   * Format success message\n   * @memberOf Services.toasterService\n   * @param {string}  message - Success message\n   */\n  success(message: string) {\n    this.iziToast.success({\n      title: message,\n      class: 'sb-toaster sb-toast-success'\n    });\n  }\n\n  /**\n   * Format information message\n   * @memberOf Services.toasterService\n   * @param {string}  message - Info message\n   */\n  info(message: string) {\n    this.iziToast.info({\n      title: message,\n      class: 'sb-toaster sb-toast-info'\n    });\n  }\n\n  /**\n   * Format error message\n   * @memberOf Services.toasterService\n   * @param {string}  message - Error message\n   */\n  error(message: string) {\n    this.iziToast.error({\n      title: message,\n      class: 'sb-toaster sb-toast-error'\n    });\n  }\n\n  /**\n   * Format warning message\n   * @memberOf Services.toasterService\n   * @param {string}  message - Warning message\n   */\n  warning(message: string) {\n    this.iziToast.warning({\n      title: message,\n      class: 'sb-toaster sb-toast-warning'\n    });\n  }\n\n  /**\n   * Custom toaster message to be configured\n   * @param config\n   */\n  custom(config: any) {\n    this.iziToast.show({\n      class: config.class,\n      message: config.message\n    });\n  }\n}\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {GlobalService} from '../../services/global.service';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\n\n@Component({\n    selector: 'lib-terms-conditions',\n    templateUrl: './terms-conditions.component.html',\n    styleUrls: ['./terms-conditions.component.scss']\n})\nexport class TermsConditionsComponent implements OnInit {\n    resourceService;\n\n    constructor(\n        private globalService: GlobalService,\n        public dialogRef: MatDialogRef<TermsConditionsComponent>,\n        @Inject(MAT_DIALOG_DATA) public data: any) {\n    }\n\n    ngOnInit() {\n        this.resourceService = this.globalService.getResourceService();\n    }\n\n    onCancel(): void {\n        this.dialogRef.close();\n    }\n\n}\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {GlobalService} from '../../services/global.service';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\n\n@Component({\n    selector: 'lib-terms-condition-confirm',\n    templateUrl: './terms-condition-confirm.component.html',\n    styleUrls: ['./terms-condition-confirm.component.scss']\n})\nexport class TermsConditionConfirmComponent implements OnInit {\n    resourceService;\n    allChecked: boolean;\n    isLoaderShow = false;\n    isSubmit = false;\n    Appropriateness = [];\n    contentDetails = [];\n    usability = [];\n    breakpoint;\n\n    constructor(\n        private globalService: GlobalService,\n        public dialogRef: MatDialogRef<TermsConditionConfirmComponent>,\n        @Inject(MAT_DIALOG_DATA) public data: any) {\n        if (data && data.isSubmit) {\n            this.isSubmit = data.isSubmit;\n        }\n    }\n\n    ngOnInit() {\n        this.breakpoint = (window.innerWidth <= 1000) ? 1 : 3;\n        this.resourceService = this.globalService.getResourceService();\n        this.Appropriateness = [\n            {\n                text: this.resourceService.frmelmnts?.lbl?.appropriatenessHate,\n                checks: false\n            },\n            {\n                text: this.resourceService.frmelmnts?.lbl?.appropriatenessAbusive,\n                checks: false\n            },\n            {\n                text: this.resourceService.frmelmnts?.lbl?.appropriatenessDiscrimination,\n                checks: false\n            },\n            {\n                text: this.resourceService.frmelmnts?.lbl?.appropriatenessChild,\n                checks: false\n            }\n        ];\n        this.contentDetails = [\n            {\n                text: this.resourceService.frmelmnts?.lbl?.contentDetailDescription,\n                checks: false\n            },\n            {\n                text: this.resourceService.frmelmnts?.lbl?.contentDetailCorrect,\n                checks: false\n            },\n            {\n                text: this.resourceService.frmelmnts?.lbl?.contentDetailAppropriate,\n                checks: false\n            },\n            {\n                text: this.resourceService.frmelmnts?.lbl?.contentDetailRelevant,\n                checks: false\n            }\n        ];\n        this.usability = [\n            {\n                text: this.resourceService.frmelmnts?.lbl?.usabilityContent,\n                checks: false\n            },\n            {\n                text: this.resourceService.frmelmnts?.lbl?.usabilityClear,\n                checks: false\n            },\n            {\n                text: this.resourceService.frmelmnts?.lbl?.usabilityAudio,\n                checks: false\n            },\n            {\n                text: this.resourceService.frmelmnts?.lbl?.usabilityNoMistakes,\n                checks: false\n            },\n            {\n                text: this.resourceService.frmelmnts?.lbl?.usabilitySimple,\n                checks: false\n            }\n        ];\n    }\n\n    onCancel(): void {\n        this.dialogRef.close();\n    }\n\n    updateAllChecked() {\n        let allChecked = true;\n        for (const val of this.Appropriateness) {\n            if (!val.checks) {\n                allChecked = false;\n                break;\n            }\n        }\n        if (allChecked) {\n            for (const val of this.contentDetails) {\n                if (!val.checks) {\n                    allChecked = false;\n                    break;\n                }\n            }\n        }\n        if (allChecked) {\n            for (const val of this.usability) {\n                if (!val.checks) {\n                    allChecked = false;\n                    break;\n                }\n            }\n        }\n        this.allChecked = allChecked;\n    }\n\n    allCheck(isAllCheck: boolean = false) {\n        this.Appropriateness.forEach(val => {\n            val.checks = isAllCheck;\n        });\n        this.contentDetails.forEach(val => {\n            val.checks = isAllCheck;\n        });\n        this.usability.forEach(val => {\n            val.checks = isAllCheck;\n        });\n        this.allChecked = true;\n        if (!isAllCheck) {\n            this.dialogRef.close();\n        }\n    }\n\n    onSubmit(event) {\n        this.dialogRef.close(event);\n    }\n\n    onResize(event) {\n        this.breakpoint = (event.target.innerWidth <= 1000) ? 1 : 3;\n    }\n}\n","import {ActivatedRoute, Router} from '@angular/router';\nimport {Component, OnInit, ViewChild} from '@angular/core';\nimport {AbstractControl, AsyncValidatorFn, FormBuilder, FormGroup, ValidationErrors, ValidatorFn, Validators} from '@angular/forms';\n\nimport {GlobalService} from '../../services/global.service';\nimport {UciService} from '../../services/uci.service';\nimport * as moment from 'moment';\nimport {ToasterService} from '../../services/toaster.service';\nimport {MatDialog} from '@angular/material/dialog';\nimport {TermsConditionsComponent} from '../terms-conditions/terms-conditions.component';\nimport {TermsConditionConfirmComponent} from '../terms-condition-confirm/terms-condition-confirm.component';\nimport {BehaviorSubject, Observable} from 'rxjs';\nimport {debounceTime, distinctUntilChanged, first, map, switchMap} from 'rxjs/operators';\n\n@Component({\n  selector: 'lib-conversation-add',\n  templateUrl: './conversation-add.component.html',\n  styleUrls: ['./conversation-add.component.scss'],\n})\nexport class ConversationAddComponent implements OnInit {\n  @ViewChild('verifyAllModal') verifyAllModal;\n  @ViewChild('horizontalStepper') horizontalStepper;\n  @ViewChild('verticalStepper') verticalStepper;\n  currentViewState = 'ADD_CONVERSATION';\n  conversationBot;\n  stepIndex = 1;\n  botLogics = [];\n  broadcastBotLogics = [];\n  userSegments = [];\n  column = '';\n  sortDirection = '';\n  reverse = false;\n  collectionListModal = false;\n  isLoaderShow = false;\n  isModalLoaderShow = false;\n  logicFormRequest = {};\n  isCheckedTermCondition = false;\n  conversationForm: FormGroup;\n  termsAndConditionModal = false;\n  verifyAllItemsModal = false;\n  conversationId;\n  selectedLogicIndex;\n  startMinDate = new Date(moment().subtract(1, 'd').format('YYYY-MM-DD'));\n  endMinDate;\n  allChecked: boolean;\n  isSubmit: boolean;\n  isStartingMessageExist: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n  isStartingMessageAvailable = false;\n  fileErrorStatus;\n  user;\n  resourceService;\n\n  constructor(\n    private uciService: UciService,\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private fb: FormBuilder,\n    private globalService: GlobalService,\n    private toasterService: ToasterService,\n    public dialog: MatDialog,\n  ) {\n    this.endMinDate = new Date(moment().add(1, 'days').format('YYYY-MM-DD'));\n  }\n\n  ngOnInit() {\n    this.user = this.globalService.getUser();\n    this.resourceService = this.globalService.getResourceService();\n    if (!this.user) {\n      this.router.navigate(['uci-admin']);\n      return;\n    }\n    this.conversationForm = this.fb.group({\n      name: ['', Validators.required],\n      description: [''],\n      purpose: ['', Validators.required],\n      startingMessage: ['', [Validators.required]],\n      startDate: [null, Validators.required],\n      endDate: [null],\n      segmentId: ['', Validators.required],\n      status: ['enabled']\n    });\n\n    // Edit case\n    this.conversationId = this.activatedRoute.snapshot.paramMap.get('id');\n    if (this.conversationId) {\n      this.getBotDetails();\n    }\n  }\n\n  userSegment() {\n    this.currentViewState = 'SELECT_SEGMENT';\n  }\n\n  onUserSegmentCancel() {\n    this.currentViewState = 'ADD_CONVERSATION';\n  }\n\n  onUserSegmentAddClick() {\n    this.currentViewState = 'ADD_SEGMENT';\n  }\n\n  onUserSegmentAdd(segments) {\n    this.userSegments = segments;\n    this.currentViewState = 'ADD_CONVERSATION';\n  }\n\n  onUserSegmentCreate(segment) {\n    this.userSegments.push(segment);\n    this.currentViewState = 'ADD_CONVERSATION';\n  }\n\n  onUserSegmentDelete(index) {\n    this.userSegments.splice(index, 1);\n  }\n\n  nextStep() {\n    if (this.stepIndex === 1 && this.conversationForm.valid) {\n      this.horizontalStepper.next();\n      this.verticalStepper.next();\n      this.stepIndex = 2;\n    }\n  }\n\n  backToStepOne() {\n    if (this.stepIndex === 2) {\n      this.stepIndex = 1;\n      this.horizontalStepper.previous();\n      this.verticalStepper.previous();\n    }\n  }\n\n  onAddCancel() {\n    this.router.navigate(['uci-admin']);\n  }\n\n  onSubmit(isTriggerBot = false, isNavigateToEnd = false) {\n    const reqObj = {\n      ...this.conversationForm.getRawValue(),\n      users: [],\n      logic: []\n    };\n    this.userSegments.forEach(userSegment => {\n      reqObj.users.push(userSegment.id);\n    });\n    this.botLogics.forEach(logic => {\n      reqObj.logic.push(logic.id);\n    });\n    if (reqObj.startDate) {\n      reqObj.startDate = moment(reqObj.startDate).format('YYYY-MM-DD');\n    }\n    if (reqObj.endDate) {\n      reqObj.endDate = moment(reqObj.endDate).format('YYYY-MM-DD');\n    }\n    if (isNavigateToEnd) {\n      reqObj.name += ' Broadcast';\n      reqObj.startingMessage += ' Broadcast';\n    }\n\n    this.isLoaderShow = true;\n\n    if (this.conversationId) {\n      this.uciService.botUpdate(this.conversationId, {data: reqObj}).subscribe(\n        data => {\n          this.closeVerifyModal();\n          this.isLoaderShow = false;\n          this.afterBotSubmit({queryParams: {text: reqObj.startingMessage, botId: this.conversationId}});\n        }, error => {\n          this.isLoaderShow = false;\n          this.verifyAllItemsModal = true;\n          this.allChecked = false;\n          if (error.result && error.result.error) {\n            this.toasterService.error(error.result.error);\n          }\n        }\n      );\n    } else {\n      this.uciService.botCreate({data: reqObj}).subscribe(\n        (data: any) => {\n          if (!isNavigateToEnd) {\n            this.conversationBot = {text: reqObj.startingMessage, botId: data.id};\n          }\n          if (isTriggerBot) {\n            this.startConversation(data, isNavigateToEnd);\n          } else {\n            this.closeVerifyModal();\n            this.isLoaderShow = false;\n            if (isNavigateToEnd) {\n              this.afterBotSubmit({queryParams: {text: reqObj.startingMessage, botId: data.id}});\n            } else {\n              this.createSegment();\n            }\n          }\n\n        }, error => {\n          this.isLoaderShow = false;\n          this.verifyAllItemsModal = true;\n          this.allChecked = false;\n          if (error.result && error.result.error) {\n            this.toasterService.error(error.result.error);\n          }\n        }\n      );\n    }\n  }\n\n  afterBotSubmit(extras) {\n    const mappingData = {\n      segmentId: parseInt(this.conversationForm.value.segmentId, 10),\n      botId: this.conversationBot.botId\n    };\n\n    this.uciService.nlSegmentBotMapping(mappingData).subscribe(\n      data => {\n        this.router.navigate(['uci-admin/success'], extras);\n      }\n    );\n  }\n\n  createSegment() {\n    const segData = {\n      name: this.conversationForm.getRawValue().name,\n      all: {\n        type: 'get',\n        config: {\n          url: `http://103.154.251.109:8070/segments/${this.conversationForm.getRawValue().segmentId}/mentors?deepLink=nipunlakshya://chatbot&botId=${this.conversationBot.botId}`,\n          type: 'GET',\n          cadence: {\n            perPage: 5,\n            retries: 5,\n            timeout: 60,\n            concurrent: true,\n            pagination: true,\n            concurrency: 10,\n            'retries-interval': 10\n          },\n          pageParam: 'page',\n          credentials: {},\n          totalRecords: 200000\n        }\n      },\n      byID: {},\n      byPhone: {}\n    };\n    segData.byID = segData.all;\n    segData.byPhone = segData.all;\n    this.uciService.createUserSegment(segData).subscribe(\n      data => {\n        this.userSegments.push(data);\n        this.createBroadcastBotLogic();\n      }\n    );\n  }\n\n  createBroadcastBotLogic() {\n    for (const botLogic of this.botLogics) {\n      botLogic.adapter = this.globalService.getBroadcastAdapterId();\n      botLogic.transformers[0].meta.type = 'broadcast';\n      botLogic.transformers[0].meta.data = {botId: this.conversationBot.botId};\n\n      this.uciService.createLogic({data: botLogic}).subscribe(\n        (data: any) => {\n          this.isModalLoaderShow = false;\n          const existingLogic = botLogic;\n          delete existingLogic.id;\n          this.broadcastBotLogics.push({\n            id: data.id,\n            ...existingLogic,\n          });\n          this.afterBroadcastBotLogic();\n        }, error => {\n          this.isModalLoaderShow = false;\n        }\n      );\n    }\n  }\n\n  afterBroadcastBotLogic() {\n    if (this.botLogics.length <= this.broadcastBotLogics.length) {\n      this.botLogics = this.broadcastBotLogics;\n      this.onSubmit(true, true);\n    }\n  }\n\n  startConversation(bot, isNavigateToEnd = false) {\n    this.uciService.startConversation(bot.id).subscribe(\n      data => {\n        this.isLoaderShow = false;\n        this.closeVerifyModal();\n        if (isNavigateToEnd) {\n          this.afterBotSubmit({queryParams: {text: this.conversationForm.value.startingMessage, botId: bot.id}});\n        } else {\n          this.createSegment();\n        }\n      }, error => {\n        this.verifyAllItemsModal = true;\n        this.allChecked = false;\n        this.isLoaderShow = false;\n        if (error.result && error.result.error) {\n          this.toasterService.error(error.result.error);\n        }\n      }\n    );\n  }\n\n  closeVerifyModal() {\n    if (this.verifyAllModal) {\n      this.verifyAllModal.deny('denied');\n    }\n    this.verifyAllItemsModal = false;\n  }\n\n  openTermAndConditionModel() {\n    // this.termsAndConditionModal = true;\n    const dialogRef = this.dialog.open(TermsConditionsComponent);\n\n    dialogRef.afterClosed().subscribe(result => {\n    });\n  }\n\n  openItemsVerifyModal(isSubmitBtn: boolean) {\n    this.verifyAllItemsModal = true;\n    this.allChecked = false;\n    this.isSubmit = isSubmitBtn;\n    const dialogRef = this.dialog.open(TermsConditionConfirmComponent, {\n      data: {isSubmit: this.isSubmit}\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result !== undefined) {\n        this.onSubmit(result);\n      }\n    });\n  }\n\n  getBotDetails() {\n    this.uciService.getBotDetails(this.conversationId).subscribe((val: any) => {\n      if (val.data) {\n        this.conversationForm.patchValue({\n          name: val.data.name,\n          description: val.data.description,\n          purpose: val.data.purpose,\n          startingMessage: val.data.startingMessage,\n          status: val.data.status,\n          startDate: val.data.startDate ? new Date(moment(val.data.startDate).format('YYYY-MM-DD')) : null,\n          endDate: val.data.endDate ? new Date(moment(val.data.endDate).format('YYYY-MM-DD')) : null\n        });\n        if (val.data.startDate) {\n          const minDate = moment().isBefore(moment(val.data.startDate)) ? moment().subtract(1, 'd') : moment(val.data.startDate);\n          this.startMinDate = new Date(moment(minDate).format('YYYY-MM-DD'));\n        }\n        if (val.data.userSegments) {\n          this.userSegments = val.data.userSegments;\n        }\n        if (val.data.logic) {\n          this.botLogics = val.data.logic;\n        }\n      }\n    });\n  }\n\n  onStarringMessageChange() {\n    // this.uciService.searchConversation({startingMessage: this.conversationForm.value.startingMessage, match: true}).subscribe(val => {\n    //   console.log(val);\n    //   if (val && val.data && val.data.length) {\n    //     console.log(val.data);\n    //     this.isStartingMessageExist.next((this.conversationId !== val.data[0].id));\n    //   } else {\n    //     this.isStartingMessageExist.next(false);\n    //   }\n    // }, error => {\n    //   this.isStartingMessageExist.next(false);\n    // });\n  }\n\n  private validateStartingMessage(): AsyncValidatorFn {\n    return control => control.valueChanges\n      .pipe(\n        debounceTime(400),\n        distinctUntilChanged(),\n        switchMap(value => this.uciService.searchConversation({startingMessage: value, match: true})),\n        map((val) => {\n          console.log('---', val);\n          let isStartingMessageExist = false;\n          if (val && val.data && val.data.length) {\n            isStartingMessageExist = (this.conversationId !== val.data[0].id);\n          }\n          console.log('vaaaaaaa', isStartingMessageExist, isStartingMessageExist ? {alreadyExist: true} : null);\n          return isStartingMessageExist ? {alreadyExist: true} : null;\n        }));\n    /*return (control: AbstractControl): Observable<ValidationErrors | null> => {\n      // return this.isStartingMessageExist.pipe(\n      //   map(val => {\n      //     console.log('vaaaaaaa', val, val ? {alreadyExist: true} : null);\n      //     return val ? {alreadyExist: true} : null;\n      //   })\n      // );\n\n\n\n      // return this.uciService.searchConversation({startingMessage: control.value, match: true})\n      //   .pipe(\n      //     debounceTime(1000),\n      //     map(val => {\n      //       console.log(val);\n      //       let isStartingMessageExist = false;\n      //       if (val && val.data && val.data.length) {\n      //         isStartingMessageExist = (this.conversationId !== val.data[0].id);\n      //       }\n      //       console.log('-----', isStartingMessageExist);\n      //       return isStartingMessageExist ? {alreadyExist: true} : null;\n      //     })\n      //   );\n      // return {alreadyExist: true};\n    };*/\n  }\n\n  onBotLogicModify(logics) {\n    this.botLogics = logics;\n  }\n}\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {UciService} from '../../services/uci.service';\nimport {Router} from '@angular/router';\nimport {GlobalService} from '../../services/global.service';\n\n@Component({\n    selector: 'lib-user-segment-list',\n    templateUrl: './user-segment-list.component.html',\n    styleUrls: ['./user-segment-list.component.css']\n})\nexport class UserSegmentListComponent implements OnInit {\n    @Output() cancel = new EventEmitter<boolean>();\n    @Output() add = new EventEmitter<any>();\n    @Input() selectedUserSegments = [];\n\n    userSegments = [];\n    selectedUserSegmentMap = {};\n    pager: any = {\n        totalItems: 0,\n        currentPage: 1,\n        pageSize: 10,\n        totalPages: 0,\n        startPage: 0,\n        endPage: 0,\n        startIndex: 0,\n        endIndex: 0,\n        pages: []\n    };\n    pageNumber = 1;\n    column = '';\n    reverse = false;\n    queryParams: any;\n    search;\n    resourceService;\n\n    constructor(\n        private uciService: UciService,\n        private route: Router,\n        private globalService: GlobalService\n    ) {\n    }\n\n    ngOnInit() {\n        this.resourceService = this.globalService.getResourceService();\n        this.selectedUserSegments.forEach(selectedUserSegment => {\n            this.selectedUserSegmentMap[selectedUserSegment.id] = selectedUserSegment;\n        });\n\n        this.getUserSegment();\n    }\n\n    getUserSegment() {\n        const param: any = {\n            page: this.pager.currentPage,\n            perPage: this.pager.pageSize\n        };\n\n        if (this.search) {\n            param.name = this.search;\n            this.uciService.searchUserSegment(param).subscribe(\n                data => this.parseUserSegments(data)\n            );\n        } else {\n            this.uciService.fetchUserSegment(param).subscribe(\n                data => this.parseUserSegments(data)\n            );\n        }\n    }\n\n    parseUserSegments(data) {\n        this.userSegments = data.data;\n        this.pager.totalItems = data.total;\n        this.pager.totalPages = Math.ceil(data.total / this.pager.pageSize);\n        this.pager.pages = [];\n        let i = 1;\n        while (i <= Math.ceil(data.total / this.pager.pageSize)) {\n            this.pager.pages.push(i);\n            i++;\n        }\n    }\n\n    navigateToPage(page: number): undefined | void {\n        if (page < 1 || page > this.pager.totalPages) {\n            return;\n        }\n        this.pageNumber = page;\n        this.pager.currentPage = page;\n        this.getUserSegment();\n    }\n\n    getSearch() {\n        this.getUserSegment();\n    }\n\n    onCancel() {\n        this.cancel.emit(false);\n    }\n\n    onCheck(event, userSegment) {\n        if (event.target.checked) {\n            this.selectedUserSegmentMap[userSegment.id] = userSegment;\n        } else {\n            delete this.selectedUserSegmentMap[userSegment.id];\n        }\n    }\n\n    onAdd() {\n        this.add.emit(Object.values(this.selectedUserSegmentMap));\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {BaseService} from './base.service';\nimport {GlobalService} from './global.service';\n\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class UciGraphQlService extends BaseService {\n    BASE_URL;\n\n    constructor(public http: HttpClient, public globalService: GlobalService) {\n        super(http, globalService);\n        this.globalService.baseUrl$.subscribe(value => {\n            if (value) {\n                this.BASE_URL = value + '/uci-api/gql';\n            }\n        });\n    }\n\n    getState() {\n        return this.baseRequest({\n            query: `query getListOfStates{\n            organisation(distinct_on:state){\n            state}}`\n        });\n    }\n\n    getDistrict(param) {\n        return this.baseRequest({\n            query: `query getListOfDistrictInState($state:String){\n            organisation(where:{state:{_eq:$state}},  distinct_on:district){\n            state\n            district}}`,\n            variables: param\n        });\n    }\n\n    getBlock(param) {\n        return this.baseRequest({\n            query: `query getListOfBlocksUnderDistrict($district:[String!],$state:String){\n            blocks: organisation(where:{state:{_eq:$state},district:{_in:$district}},distinct_on:block){\n            block\n            district\n            state\n            }\n            }`,\n            variables: param\n        });\n    }\n\n    getSchoolDetails(param) {\n        return this.baseRequest({\n            query: `query getListOfSchoolsUnderBlocksAndDistrict($district:[String!],$state:String,$block:[String!]){\n            schools:organisation(where:{state:{_eq:$state},district:{_in:$district},block:{_in:$block}}){\n            school\n            school_code\n            block\n            district\n            state\n            }\n            }`,\n            variables: param\n        });\n    }\n\n    getClusters(param) {\n        return this.baseRequest({\n            query: `query getListOfClustersUnderBlockAndDistrict($block:[String!],$district:[String!],$state:String){\n            clusters:organisation(where:{state:{_eq:$state},district:{_in:$district},block:{_in:$block}},distinct_on:cluster){\n            cluster\n            }\n            }`,\n            variables: param\n        });\n    }\n\n    getRole() {\n        return this.baseRequest({\n            query: `query fetchListOfRoles{\n                   role{\n                   id\n                   name\n                   }\n                   }`\n        });\n    }\n\n    getBoards() {\n        return this.baseRequest({\n            query: `query listOfBoards{\n                  board{\n                  id\n                  name}}`\n        });\n    }\n\n    private baseRequest(body) {\n        return this.http.post(this.BASE_URL, body, {});\n    }\n}\n","import {Component, EventEmitter, OnInit, Output} from '@angular/core';\nimport {UciService} from '../../services/uci.service';\nimport {UciGraphQlService} from '../../services/uci-graph-ql.service';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {GlobalService} from '../../services/global.service';\n\n@Component({\n    selector: 'lib-user-segment-add',\n    templateUrl: './user-segment-add.component.html',\n    styleUrls: ['./user-segment-add.component.css']\n})\nexport class UserSegmentAddComponent implements OnInit {\n    @Output() cancel = new EventEmitter<boolean>();\n    @Output() add = new EventEmitter<any>();\n    formFieldProperties: Array<any>;\n    userSegment: any = {};\n    isLoaderShow = false;\n    districts = [];\n    blocks = [];\n    schools = [];\n    clusters = [];\n    roles = [];\n    boards = [];\n    grade = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12];\n    subjects = [];\n    userSegmentForm: FormGroup;\n    state = 'Haryana';\n    resourceService;\n\n    constructor(private uciService: UciService,\n                private fb: FormBuilder,\n                private uciGraphQlService: UciGraphQlService,\n                private globalService: GlobalService) {\n    }\n\n    ngOnInit() {\n        this.resourceService = this.globalService.getResourceService();\n        this.getUciDistrict();\n        this.getUciRole();\n        this.getUciBoard();\n        this.userSegmentForm = this.fb.group({\n            name: ['', Validators.required],\n            description: [''],\n            district: [''],\n            block: [''],\n            cluster: [''],\n            school: [''],\n            role: [''],\n            board: [''],\n            grade: [''],\n            subject: ['']\n        });\n\n        this.userSegmentForm.get('district').valueChanges.subscribe(item => {\n            if (item) {\n                this.userSegmentForm.get('block').patchValue('');\n                this.blocks = [];\n                this.userSegmentForm.get('cluster').patchValue('');\n                this.userSegmentForm.get('school').patchValue('');\n                this.schools = [];\n                this.clusters = [];\n                this.getUciBlock();\n            }\n        });\n        this.userSegmentForm.get('block').valueChanges.subscribe(item => {\n            if (item) {\n                this.userSegmentForm.get('cluster').patchValue('');\n                this.userSegmentForm.get('school').patchValue('');\n                this.schools = [];\n                this.clusters = [];\n                this.getUciCluster();\n                this.getUciSchoolDetails();\n            }\n        });\n    }\n\n    onCancel() {\n        this.cancel.emit(false);\n    }\n\n    onAdd() {\n        if (this.userSegmentForm.invalid) {\n            return;\n        }\n        this.isLoaderShow = true;\n        const formValue = this.userSegmentForm.value;\n        const locationData = [];\n        const blockData = [];\n        const districtData = [];\n        for (const school of this.schools) {\n            if (formValue.school.indexOf(school.school) !== -1) {\n                locationData.push(school);\n                if (blockData.indexOf(school.block) === -1) {\n                    blockData.push(school.block);\n                    districtData.push(school.district);\n                }\n            }\n            if (locationData.length === formValue.school) {\n                break;\n            }\n        }\n        if (blockData.length < formValue.block.length) {\n            for (const block of this.blocks) {\n                if (formValue.block.indexOf(block.block) !== -1 && blockData.indexOf(block.block) === -1) {\n                    locationData.push(block);\n                    blockData.push(block.block);\n                    districtData.push(block.district);\n                }\n                if (blockData.length === formValue.block) {\n                    break;\n                }\n            }\n        }\n        if (districtData.length < formValue.district.length) {\n            for (const district of this.districts) {\n                if (formValue.district.indexOf(district.district) !== -1 && districtData.indexOf(district.district) === -1) {\n                    locationData.push(district);\n                }\n            }\n        }\n        const param = {\n            data: {\n                userLocation: locationData,\n                roles: formValue.role,\n                userType: {\n                    type: 'student'\n                },\n                framework: {\n                    board: formValue.board,\n                    gradeLevel: formValue.grade\n                }\n            }\n        };\n\n        this.uciService.userSegmentQueryBuilder(param).subscribe(response => {\n            if (response) {\n                const items = {\n                    ...response,\n                    name: formValue.name,\n                    description: formValue.description\n                };\n                this.uciService.createUserSegment({data: items}).subscribe(\n                    (data: any) => {\n                        this.isLoaderShow = false;\n                        this.afterAdd(data.inserted);\n                    }, err => {\n                        this.isLoaderShow = false;\n                    }\n                );\n            }\n        }, error => {\n            this.isLoaderShow = false;\n        });\n    }\n\n    afterAdd(data) {\n        this.add.emit(data);\n    }\n\n    getUciState() {\n        this.uciGraphQlService.getState().subscribe(res => {\n        });\n    }\n\n    getUciDistrict() {\n        const params = {\n            state: this.state\n        };\n        this.uciGraphQlService.getDistrict(params).subscribe((res: any) => {\n            this.districts = [];\n            if (res && res.data && res.data.organisation && res.data.organisation.length) {\n                this.districts = res.data.organisation;\n            }\n        });\n    }\n\n    getUciBlock() {\n        const formVal = this.userSegmentForm.value;\n        const params = {\n            state: this.state, district: formVal.district\n        };\n        this.uciGraphQlService.getBlock(params).subscribe((res: any) => {\n            this.blocks = [];\n            if (res && res.data && res.data.blocks && res.data.blocks.length) {\n                this.blocks = res.data.blocks;\n            }\n        });\n    }\n\n    getUciCluster() {\n        const formVal = this.userSegmentForm.value;\n        const params = {\n            state: this.state, district: formVal.district, block: formVal.block\n        };\n        this.uciGraphQlService.getClusters(params).subscribe((res: any) => {\n            this.clusters = [];\n            if (res && res.data && res.data.clusters && res.data.clusters.length) {\n                if (res.data.clusters[0].cluster) {\n                    this.clusters = res.data.clusters;\n                }\n            }\n        });\n    }\n\n    getUciSchoolDetails() {\n        const formVal = this.userSegmentForm.value;\n        const params = {\n            state: this.state, district: formVal.district, block: formVal.block\n        };\n        this.uciGraphQlService.getSchoolDetails(params).subscribe((res: any) => {\n            this.schools = [];\n            if (res && res.data && res.data.schools && res.data.schools.length) {\n                this.schools = res.data.schools;\n            }\n        });\n    }\n\n    getUciRole() {\n        this.uciGraphQlService.getRole().subscribe((res: any) => {\n            if (res && res.data && res.data.role && res.data.role.length) {\n                this.roles = res.data.role;\n            }\n        });\n    }\n\n    getUciBoard() {\n        this.uciGraphQlService.getBoards().subscribe((res: any) => {\n            if (res && res.data && res.data.board && res.data.board.length) {\n                this.boards = res.data.board;\n            }\n        });\n    }\n}\n","import {Component, OnInit} from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {Helper} from '../../utils/helper';\nimport {GlobalService} from '../../services/global.service';\n\n@Component({\n    selector: 'lib-conversation-success',\n    templateUrl: './conversation-success.component.html',\n    styleUrls: ['./conversation-success.component.scss']\n})\nexport class ConversationSuccessComponent implements OnInit {\n    url = '';\n    botId = '';\n    resourceService;\n\n    constructor(private router: Router,\n                private activatedRoute: ActivatedRoute,\n                private globalService: GlobalService) {\n    }\n\n    ngOnInit(): void {\n        this.url = Helper.makBotUrl(this.activatedRoute.snapshot.queryParams.text || '', this.globalService.getBotPhoneNumber());\n        this.botId = this.activatedRoute.snapshot.queryParams.botId || '';\n        this.resourceService = this.globalService.getResourceService();\n    }\n\n    onCopy(id) {\n        Helper.copyData(id);\n    }\n\n    onClose() {\n        this.router.navigate(['/uci-admin']);\n    }\n\n}\n","import {Component, Inject} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {GlobalService} from '../../services/global.service';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {UciService} from '../../services/uci.service';\nimport {ToasterService} from '../../services/toaster.service';\n\n@Component({\n    selector: 'lib-add-logic',\n    templateUrl: './add-logic.component.html',\n    styleUrls: ['./add-logic.component.scss'],\n})\nexport class AddLogicComponent {\n    resourceService;\n    isModalLoaderShow = false;\n    logicForm: FormGroup;\n    odkFileAlreadyExist = false;\n    fileErrorStatus;\n    breakpoint;\n\n    constructor(\n        private uciService: UciService,\n        private fb: FormBuilder,\n        private toasterService: ToasterService,\n        private globalService: GlobalService,\n        public dialogRef: MatDialogRef<AddLogicComponent>,\n        @Inject(MAT_DIALOG_DATA) public data: any) {\n        this.resourceService = this.globalService.getResourceService();\n        this.initialize();\n        if (data && data.id) {\n            this.patchValue(data);\n        }\n    }\n\n    initialize() {\n        this.breakpoint = (window.innerWidth <= 1000) ? 1 : 3;\n        this.logicForm = this.fb.group({\n            id: [null],\n            name: ['', Validators.required],\n            description: [''],\n            formId: ['', Validators.required]\n        });\n    }\n\n    patchValue(item) {\n        this.logicForm.patchValue(\n            {\n                id: item.id,\n                name: item.name,\n                description: item.description,\n                formId: item.formID\n            }\n        );\n    }\n\n    onCancel(): void {\n        this.dialogRef.close();\n    }\n\n    onLogicAdd(): void {\n        this.dialogRef.close(this.logicForm.value);\n    }\n\n    onFileUpload(event) {\n        if (!event.target.files.length) {\n            return;\n        }\n        const file = event.target.files[0];\n        const obj = {\n            form: file\n        };\n        this.logicForm.patchValue({formId: ''});\n        this.isModalLoaderShow = true;\n        this.uciService.uploadFile(obj).subscribe((fileInfo: any) => {\n                if (fileInfo.data) {\n                    this.logicForm.patchValue({formId: fileInfo.data.formID});\n                }\n                this.isModalLoaderShow = false;\n                this.odkFileAlreadyExist = false;\n            }, error => {\n                this.isModalLoaderShow = false;\n                this.odkFileAlreadyExist = true;\n                this.fileErrorStatus = error.status;\n                if (error.result && error.result.error) {\n                    this.toasterService.error(error.result.error);\n                }\n            }\n        );\n    }\n\n    manualDownload(): void {\n        window.open(this.globalService.getBlobUrl().replace('/player', '') + 'UCI%20_%20ODK%20Instruction%20Manual.pdf', '_blank');\n    }\n\n    sampleODKDownload(): void {\n        window.open(this.globalService.getBlobUrl().replace('/player', '') + 'Sample_ODK.xlsx', '_blank');\n    }\n\n    onResize(event) {\n        this.breakpoint = (event.target.innerWidth <= 1000) ? 1 : 3;\n    }\n\n}\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {UciService} from '../../services/uci.service';\nimport {GlobalService} from '../../services/global.service';\nimport {AddLogicComponent} from '../add-logic/add-logic.component';\nimport {MatDialog} from '@angular/material/dialog';\nimport {MatTableDataSource} from '@angular/material/table';\n\n@Component({\n    selector: 'lib-logic-list',\n    templateUrl: './logic-list.component.html',\n    styleUrls: ['./logic-list.component.scss']\n})\nexport class LogicListComponent implements OnInit {\n    @Input() botLogics = [];\n    @Input() notificationBotLogics = [];\n    @Output() modify = new EventEmitter<any>();\n    datasource = new MatTableDataSource<any>([]);\n    logicFormRequest = {};\n    selectedLogicIndex;\n    fileErrorStatus;\n    isModalLoaderShow = false;\n    collectionListModal = false;\n    displayedColumns: string[] = ['sno', 'name', 'description', 'action'];\n    resourceService;\n\n    constructor(\n        private uciService: UciService,\n        private globalService: GlobalService,\n        public dialog: MatDialog,\n    ) {\n    }\n\n    ngOnInit() {\n        this.resourceService = this.globalService.getResourceService();\n        this.datasource.data = this.botLogics;\n    }\n\n    openModel(logic = null, index = null) {\n        this.logicFormRequest = {};\n        this.collectionListModal = true;\n        // this.logicForm.reset();\n        this.fileErrorStatus = null;\n        let data = {};\n        if (logic && logic.id) {\n            this.selectedLogicIndex = index;\n            data = {\n                id: logic.id,\n                name: logic.name,\n                description: logic.description,\n                formId: logic.transformers[0].meta.formID\n            };\n        }\n        const dialogRef = this.dialog.open(AddLogicComponent, {\n            width: '850px',\n            data\n        });\n\n        dialogRef.afterClosed().subscribe(logicFormData => {\n            console.log('mat-dialog-result', logicFormData);\n            if (logicFormData) {\n                this.onLogicAdd(logicFormData);\n            }\n        });\n    }\n\n    onLogicAdd(logicFormData) {\n        const reqData: any = {\n            id: logicFormData.id,\n            name: logicFormData.name,\n            description: logicFormData.description,\n            transformers: [\n                {\n                    id: '774cd134-6657-4688-85f6-6338e2323dde',\n                    meta: {\n                        form: 'https://hosted.my.form.here.com',\n                        formID: logicFormData.formId,\n                        title: logicFormData.name,\n                        body: logicFormData.description,\n                        templateType: 'JS_TEMPLATE_LITERALS'\n                    }\n                }\n            ],\n            adapter: this.globalService.getAdapterId()\n        };\n\n        this.isModalLoaderShow = true;\n        if (logicFormData.id) {\n            this.uciService.updateLogic(logicFormData.id, {data: reqData}).subscribe(\n                (data: any) => {\n                    this.isModalLoaderShow = false;\n                    const existingLogic = reqData;\n                    delete existingLogic.id;\n                    this.botLogics[this.selectedLogicIndex] = Object.assign(this.botLogics[this.selectedLogicIndex], existingLogic);\n                    this.onModify();\n                }, error => {\n                    this.isModalLoaderShow = false;\n                }\n            );\n        } else {\n            this.uciService.createLogic({data: reqData}).subscribe(\n                (data: any) => {\n                    this.isModalLoaderShow = false;\n                    const existingLogic = reqData;\n                    delete existingLogic.id;\n                    this.botLogics.push({\n                        id: data.id,\n                        ...existingLogic,\n                    });\n                    this.onModify();\n                }, error => {\n                    this.isModalLoaderShow = false;\n                }\n            );\n        }\n    }\n\n    onDelete(logic, index) {\n        this.uciService.deleteLogic(logic.id).subscribe(\n            file => {\n                this.botLogics.splice(index, 1);\n            }\n        );\n    }\n\n    onModify() {\n        this.datasource.data = this.botLogics;\n        this.modify.emit(this.botLogics);\n    }\n}\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {UciService} from '../../services/uci.service';\nimport {GlobalService} from '../../services/global.service';\nimport {MatDialog} from '@angular/material/dialog';\nimport {FormBuilder, FormGroup} from '@angular/forms';\nimport * as moment from 'moment';\nimport {debounceTime} from 'rxjs/operators';\n\n@Component({\n    selector: 'lib-conversation-setup',\n    templateUrl: './conversation-setup.component.html',\n    styleUrls: ['./conversation-setup.component.scss']\n})\nexport class ConversationSetupComponent implements OnInit {\n    @Input() conversationForm: FormGroup;\n    @Input() isStartingMessageExist;\n    @Input() startMinDate;\n    @Input() userSegments;\n    @Output() starringMessageChange = new EventEmitter<any>();\n    @Output() userSegmentDelete = new EventEmitter<any>();\n    matDateBreakpoint;\n    endMinDate;\n    resourceService;\n\n    constructor(\n        private fb: FormBuilder,\n        private uciService: UciService,\n        private globalService: GlobalService,\n        public dialog: MatDialog,\n    ) {\n    }\n\n    ngOnInit() {\n        this.matDateBreakpoint = (window.innerWidth <= 1000) ? 1 : 2;\n        this.resourceService = this.globalService.getResourceService();\n        if (this.conversationForm) {\n            // start date and end date value change\n            this.conversationForm.get('startDate').valueChanges.subscribe(val => {\n                if ((this.conversationForm.value.endDate && moment(this.conversationForm.value.endDate).isBefore(moment(val))) || !val) {\n                    this.conversationForm.get('endDate').patchValue(null);\n                }\n                const tempDate = moment(val).format('YYYY-MM-DD');\n                this.endMinDate = new Date(tempDate);\n            });\n\n            this.conversationForm.get('startingMessage').valueChanges\n                .pipe(debounceTime(1000))\n                .subscribe(\n                    value => {\n                        this.onStarringMessageChange();\n                    }\n                );\n        }\n    }\n\n    onStarringMessageChange() {\n        this.starringMessageChange.emit({});\n    }\n\n    onUserSegmentDelete(index) {\n        this.userSegmentDelete.emit(index);\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {GlobalService} from './global.service';\nimport {MatPaginatorIntl} from '@angular/material/paginator';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class PaginatorIntl extends MatPaginatorIntl {\n    resourceService;\n\n    constructor(public globalService: GlobalService) {\n        super();\n        this.globalService.resourceService$.subscribe(d => {\n            this.resourceService = d;\n            this.getPaginatorIntl();\n            if (this.globalService.getResourceService() && this.globalService.getResourceService().languageSelected$) {\n                this.globalService.getResourceService().languageSelected$.subscribe(\n                    lang => {\n                        this.getPaginatorIntl();\n                    }\n                );\n            }\n        });\n    }\n\n    getPaginatorIntl() {\n        this.itemsPerPageLabel = this.resourceService.frmelmnts?.lbl?.itemsPerPageLabel;\n        this.nextPageLabel = this.resourceService.frmelmnts?.lbl?.nextPageLabel;\n        this.previousPageLabel = this.resourceService.frmelmnts?.lbl?.previousPageLabel;\n        this.firstPageLabel = this.resourceService.frmelmnts?.lbl?.firstPageLabel;\n        this.lastPageLabel = this.resourceService.frmelmnts?.lbl?.lastPageLabel;\n        this.changes.next();\n        // this.getRangeLabel = this.getRangeLabel.bind(this);\n    }\n\n    getRangeLabel = (page: number, pageSize: number, length: number): string => {\n        // tslint:disable-next-line:max-line-length\n        const of = this.resourceService.frmelmnts && this.resourceService.frmelmnts.lbl && this.resourceService.frmelmnts.lbl.of ? this.resourceService.frmelmnts?.lbl?.of : 'of';\n        if (length === 0 || pageSize === 0) {\n            return '0 ' + of + ' ' + length;\n        }\n        length = Math.max(length, 0);\n        const startIndex = page * pageSize > length ? (Math.ceil(length / pageSize) - 1) * pageSize : page * pageSize;\n\n        const endIndex = Math.min(startIndex + pageSize, length);\n        return startIndex + 1 + ' - ' + endIndex + ' ' + of + ' ' + length;\n    }\n}\n","import {Component, OnInit} from '@angular/core';\nimport {GlobalService} from '../../services/global.service';\nimport {FormBuilder, FormGroup} from '@angular/forms';\nimport {UciService} from '../../services/uci.service';\nimport {ToasterService} from '../../services/toaster.service';\nimport {v4 as uuidv4} from 'uuid';\nimport {ActivatedRoute, Router} from '@angular/router';\n\n@Component({\n    selector: 'lib-exhaust-report',\n    templateUrl: './exhaust-report.component.html',\n    styleUrls: ['./exhaust-report.component.scss'],\n})\nexport class ExhaustReportComponent implements OnInit {\n    resourceService;\n    user;\n    conversationId;\n    exhaustTypes = [\n        {name: 'Response Exhaust', value: 'uci-response-exhaust'},\n        {name: 'Private Exhaust', value: 'uci-private-exhaust'},\n    ];\n    filterForm: FormGroup;\n    filters = {\n        startDate: null,\n        endDate: null,\n        exhaustType: null,\n    };\n    displayedColumns: string[] = ['requestid', 'requesttype', 'requestdate', 'conversationid', 'startdate', 'enddate', 'status', 'reportlink', 'generateddate'];\n    dataSource = [\n        {\n            requestid: 'dhheb1234',\n            requesttype: 'Response Exhaust',\n            requestdate: '14 / 03 / 2022',\n            conversationid: 'uik123',\n            startdate: '10 / 03 / 2022',\n            enddate: '11/03/2022',\n            status: 'Submitted',\n            reportlink: '-',\n            generateddate: '-'\n        },\n        {\n            requestid: 'dhheb9876',\n            requesttype: 'Private Exhaust',\n            requestdate: '14 / 03 / 2022',\n            conversationid: 'uik123',\n            startdate: '10 / 03 / 2022',\n            enddate: '11/03/2022',\n            status: 'Success',\n            reportlink: '-',\n            generateddate: '15 / 03 / 2022'\n        },\n    ];\n\n    constructor(\n        private fb: FormBuilder,\n        private uciService: UciService,\n        private router: Router,\n        private activatedRoute: ActivatedRoute,\n        private toasterService: ToasterService,\n        private globalService: GlobalService) {\n        this.resourceService = this.globalService.getResourceService();\n    }\n\n    ngOnInit() {\n        this.user = this.globalService.getUser();\n        this.resourceService = this.globalService.getResourceService();\n        if (!this.user) {\n            this.router.navigate(['uci-admin']);\n            return;\n        }\n        this.filterForm = this.fb.group({\n            startDate: [''],\n            endDate: [''],\n            exhaustType: [this.exhaustTypes[0].value],\n        });\n        // this.filters.exhaustType = this.exhaustTypes[0].value;\n        this.conversationId = this.activatedRoute.snapshot.paramMap.get('id');\n        this.getJobList();\n    }\n\n    getJobList() {\n        this.uciService.getJobList(this.conversationId, {}).subscribe(\n            data => {\n                console.log('job list data');\n            }\n        );\n    }\n\n    getJobInfo() {\n        this.uciService.getJobInfo(this.conversationId, {}).subscribe(\n            data => {\n                console.log('job Info');\n            }\n        );\n    }\n\n    submitExhaust() {\n        const exhaustData = {\n            request: {\n                dataset: this.filters.exhaustType,\n                tag: uuidv4(),\n                requestedBy: 'user_id',\n                requestedChannel: '01309282781705830427',\n                datasetConfig: {\n                    type: this.filters.exhaustType,\n                    conversationId: this.conversationId,\n                    startDate: '2022-02-06',\n                    endDate: '2022-02-10'\n                },\n                output_format: 'csv'\n            }\n        };\n        this.uciService.submitExhaust(exhaustData).subscribe(\n            data => {\n                console.log('job Info');\n            }\n        );\n    }\n\n\n}\n","import {PipesModule} from '../pipes/pipes.module';\nimport {UciService} from '../services/uci.service';\nimport {ConfigService} from '../services/config.service';\nimport {HttpClientModule} from '@angular/common/http';\nimport {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {SidePanelComponent} from './side-panel/side-panel.component';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {ConversationListComponent} from './conversation-list/conversation-list.component';\nimport {ConversationAddComponent} from './conversation-add/conversation-add.component';\nimport {UserSegmentListComponent} from './user-segment-list/user-segment-list.component';\nimport {UserSegmentAddComponent} from './user-segment-add/user-segment-add.component';\nimport {SuiModule} from 'ng2-semantic-ui-v9';\nimport {ConversationSuccessComponent} from './conversation-success/conversation-success.component';\nimport {UciGraphQlService} from '../services/uci-graph-ql.service';\nimport {TermsConditionsComponent} from './terms-conditions/terms-conditions.component';\nimport {TermsConditionConfirmComponent} from './terms-condition-confirm/terms-condition-confirm.component';\nimport {AddLogicComponent} from './add-logic/add-logic.component';\n//material-ui\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatPaginatorIntl, MatPaginatorModule} from '@angular/material/paginator';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatNativeDateModule} from '@angular/material/core';\nimport {LogicListComponent} from './logic-list/logic-list.component';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatStepperModule} from '@angular/material/stepper';\nimport {ConversationSetupComponent} from './conversation-setup/conversation-setup.component';\nimport {MatListModule} from '@angular/material/list';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {GlobalService} from '../services/global.service';\nimport {PaginatorIntl} from '../services/paginator-intl.service';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {ExhaustReportComponent} from './exhaust-report/exhaust-report.component';\n\n@NgModule({\n    declarations: [\n        SidePanelComponent,\n        ConversationListComponent,\n        ConversationAddComponent,\n        UserSegmentListComponent,\n        UserSegmentAddComponent,\n        TermsConditionsComponent,\n        TermsConditionConfirmComponent,\n        ConversationSuccessComponent,\n        AddLogicComponent,\n        LogicListComponent,\n        ConversationSetupComponent,\n        ExhaustReportComponent\n    ],\n    imports: [\n        CommonModule,\n        HttpClientModule,\n        FormsModule,\n        ReactiveFormsModule,\n        PipesModule,\n        SuiModule,\n        MatButtonModule,\n        MatInputModule,\n        MatGridListModule,\n        MatCheckboxModule,\n        MatDialogModule,\n        MatTableModule,\n        MatPaginatorModule,\n        MatIconModule,\n        MatMenuModule,\n        MatDatepickerModule,\n        MatNativeDateModule,\n        MatCardModule,\n        MatStepperModule,\n        MatListModule,\n        MatTooltipModule,\n        MatSelectModule,\n        MatFormFieldModule,\n    ],\n    exports: [\n        SidePanelComponent,\n    ],\n    providers: [\n        GlobalService,\n        UciService,\n        ConfigService,\n        UciGraphQlService,\n        MatDatepickerModule,\n        {\n            provide: MatPaginatorIntl, useClass: PaginatorIntl\n        }\n    ],\n    entryComponents: [\n        AddLogicComponent,\n        TermsConditionsComponent,\n        TermsConditionConfirmComponent\n    ],\n})\nexport class ComponentsModule {\n}\n","import {ActivatedRoute, Router} from '@angular/router';\nimport {Component, Input, OnInit} from '@angular/core';\nimport {Location} from '@angular/common';\nimport {UciEventsService} from '../../uci-events.service';\nimport {IdiscussionConfig} from '../../models/uci-config.model';\nimport {ConfigService} from '../../services/config.service';\nimport {UciService} from '../../services/uci.service';\nimport {TelemetryUtilsService} from '../../telemetry-utils.service';\nimport {UciData} from '../../models/uci.model';\nimport {GlobalService} from '../../services/global.service';\n\n@Component({\n    selector: 'lib-lib-entry',\n    templateUrl: './lib-entry.component.html',\n    styleUrls: ['./lib-entry.component.scss']\n})\nexport class LibEntryComponent implements OnInit {\n    @Input() user;\n    @Input() baseUrl;\n    @Input() nlBaseUrl;\n    @Input() blobUrl;\n    @Input() botPhoneNumber;\n    @Input() resourceService;\n    @Input() adapterId;\n    @Input() broadcastAdapterId;\n\n    constructor(\n        public activatedRoute: ActivatedRoute,\n        private uciService: UciService,\n        private configService: ConfigService,\n        private location: Location,\n        private uciEventsService: UciEventsService,\n        private telemetryUtils: TelemetryUtilsService,\n        private globalService: GlobalService,\n        private router: Router\n    ) {\n    }\n\n    ngOnInit(): void {\n        if (this.user) {\n            this.globalService.setUser(this.user);\n        }\n        if (this.baseUrl) {\n            this.globalService.setBaseUrl(this.baseUrl);\n        }\n        if (this.nlBaseUrl) {\n            this.globalService.setNlBaseUrl(this.nlBaseUrl);\n        }\n        if (this.blobUrl) {\n            this.globalService.setBlobUrl(this.blobUrl);\n        }\n        if (this.botPhoneNumber) {\n            this.globalService.setBotPhoneNumber(this.botPhoneNumber);\n        }\n        if (this.resourceService) {\n            this.globalService.setResourceService(this.resourceService);\n        }\n        if (this.adapterId) {\n            this.globalService.setAdapterId(this.adapterId);\n        }\n        if (this.broadcastAdapterId) {\n            this.globalService.setBroadcastAdapterId(this.broadcastAdapterId);\n        }\n        if (this.router.url === '/uci-admin') {\n            this.router.navigate(['uci-admin/home'], { skipLocationChange: true });\n        }\n    }\n\n    goBack(): void {\n        this.location.back();\n    }\n\n    close(event): void {\n        const eventAction = {\n            action: 'DF_CLOSE'\n        };\n        this.uciEventsService.emitTelemetry(eventAction);\n        this.telemetryUtils.logInteract(event, UciData.IPageName.LIB_ENTRY);\n    }\n}\n","import {LibEntryComponent} from '../components/lib-entry/lib-entry.component';\nimport {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {RouterModule, Routes} from '@angular/router';\nimport {ConversationListComponent} from '../components/conversation-list/conversation-list.component';\nimport {ConversationAddComponent} from '../components/conversation-add/conversation-add.component';\nimport {ConversationSuccessComponent} from '../components/conversation-success/conversation-success.component';\nimport {ExhaustReportComponent} from '../components/exhaust-report/exhaust-report.component';\n\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: LibEntryComponent,\n        children: [\n            {\n                path: 'home',\n                pathMatch: 'full',\n                component: ConversationListComponent\n            },\n            {\n                path: 'add',\n                pathMatch: 'full',\n                component: ConversationAddComponent,\n            },\n            {\n                path: ':id/edit',\n                pathMatch: 'full',\n                component: ConversationAddComponent,\n            },\n            {\n                path: 'success',\n                pathMatch: 'full',\n                component: ConversationSuccessComponent,\n            },\n            {\n                path: ':id/reports',\n                pathMatch: 'full',\n                component: ExhaustReportComponent,\n            },\n        ]\n    }\n];\n\n@NgModule({\n    declarations: [],\n    imports: [\n        RouterModule.forChild(routes),\n        CommonModule\n    ],\n    exports: [RouterModule]\n})\nexport class UciRoutingModule {\n}\n","import { NgModule } from '@angular/core';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatButtonModule} from '@angular/material/button';\nimport {ComponentsModule} from './components/components.module';\nimport {UciRoutingModule} from './uci-routing/uci-routing.module';\nimport {UciEventsService} from './uci-events.service';\nimport {ToasterService} from './services/toaster.service';\nimport {LibEntryComponent} from './components/lib-entry/lib-entry.component';\nimport {TelemetryUtilsService} from './telemetry-utils.service';\n\nexport function provideCsModule() {\n  return window['CsModule'];\n}\n\n@NgModule({\n  declarations: [\n    LibEntryComponent\n  ],\n  imports: [\n    ComponentsModule,\n    UciRoutingModule,\n    MatButtonModule,\n    MatIconModule\n  ],\n  exports: [\n    LibEntryComponent\n  ],\n  providers: [UciEventsService, TelemetryUtilsService, ToasterService, {provide: 'CsModule', useFactory: provideCsModule}]\n})\nexport class UciModule { }\n"]}