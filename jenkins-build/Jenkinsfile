node() {

    def secrets = [
        [
            path: 'kv/samarth/uci-admin',
            engineVersion: 2,
            secretValues: [
                [envVar: 'NG_APP_url', vaultKey: 'NG_APP_url'],
                [envVar: 'NG_APP_blobUrl', vaultKey: 'NG_APP_blobUrl'],
                [envVar: 'NG_APP_botPhoneNumber', vaultKey: 'NG_APP_botPhoneNumber']
            ]
        ],
    ]

    def configuration = [vaultUrl: 'http://128.199.26.225:8200',  vaultCredentialId: 'vault-approle', engineVersion: 2]

    properties([
        parameters([
            string(name: 'docker_repo', defaultValue: 'uci-admin', description: 'Docker Image Name'),
            string(name: 'docker_server', defaultValue: 'localhost:5000', description: 'Docker Registry URL'),

        ])
    ])
    stage('Checkout') {
            cleanWs()
            checkout scm
            commit_hash = sh(script: 'git rev-parse --short HEAD', returnStdout: true).trim()
            env.commit_id = sh(script: 'echo ' + env.docker_repo + '_' + commit_hash + '_' + env.BRANCH_NAME, returnStdout: true).trim()
            echo "${env.commit_id}"
    }

    stage('Vault') {
      withVault([configuration: configuration, vaultSecrets: secrets]) {
        sh "echo \"${env.NG_APP_url}\" > .env"
        sh "echo \"${env.NG_APP_blobUrl}\" >> .env"
        sh "echo \"${env.NG_APP_botPhoneNumber}\" >> .env"
      }
    }

    stage('docker-build') {
            sh '''
                # docker build -f <location-of-docker-file> -t <tag-of-docker-image> <context-for-docker-image>
                ls -la
                docker build -f jenkins-build/Dockerfile -t $docker_server/$docker_repo:$commit_id .
                '''
    }

    stage('docker-push') {
        sh '''
                docker push $docker_server/$docker_repo:$commit_id
                '''
    }
    stage('ArchiveArtifacts') {
        sh("echo ${commit_id} > commit_id.txt")
                archiveArtifacts 'commit_id.txt'
                currentBuild.description = "${commit_id}"
    }
}
